var tipuesearch = {"pages":[{"title":"41123215-W17","text":"1.請利用 NX1872, 完成可以參與球賽競技的機器人零件與組立件設計 2.請自選上列項目一中某一零件組立過程, 以 NXOpen Python 程式完成組立 3.請將所完成的機器人球員放入 CoppeliaSim, 讓球員可以由 ZMQ Remote API 程式控制,","tags":"41123215-W17","url":"./2024-41123215-w17-blog-tutorial.html"},{"title":"20240613 w17 09","text":"根據 https://mde.tw/cd2024/content/index.html 網頁中的期末報告題目說明, 逐一完成下列評量項目 評量項目 1.請利用 NX1872, 完成可以參與球賽競技的機器人零件與組立件設計, 過程中請拍攝零組件繪製過程, 以 \"cd2024 協同產品設計實習期末實習評量項目一, 學號 XXXXXXX\" 作為 mp4 影片標題, 上傳至 Youtube 後, 在個人靜態網站中新增標題為 \"w17\", 格式為 H1 的頁面, 嵌入所完成的項目一 Youtube 影片以及所完成的零組件檔案連結後, 將此網頁網址 (即 https://個人_github帳號.github.io/cd2024/w17) 提交連結回報至評量回傳表的對應欄位中. 2.請自選上列項目一中某一零件組立過程, 以 NXOpen Python 程式完成組立, 過程中請拍攝 Python Journal 程式組立過程, 以\"cd2024 協同產品設計實習期末實習評量項目二, 學號 XXXXXXX\" 作為 mp4 影片標題, 上傳至 Youtube 後, 在 \"w17\" 頁面中嵌入所完成的項目二 Youtube 影片以及所完成的 Python Journal 程式檔案連結 (請放入 downloads 目錄, 並以 .txt 作為副檔名), 將此網頁網址 (即 https://個人_github帳號.github.io/cd2024/w17) 提交連結回報至評量回傳表的對應欄位中. 3.請將所完成的機器人球員放入 CoppeliaSim 運動場景中 (即 https://mde.tw/cd2024/content/index.html 網頁中的 cd2024_footbasketball_field_specification_step2.7z 場景), 讓球員可以由 ZMQ Remote API 程式控制, 執行後按下 w 鍵後球員可向前移動, 按下 s 後球員可向後移動, 過程中請拍攝 Python 程式執行與球員前後移動過程, 以\"cd2024 協同產品設計實習期末實習評量項目三, 學號 XXXXXXX\" 作為 mp4 影片標題\", 上傳至 Youtube 後, 在 \"w17\" 頁面中嵌入所完成的項目三 Youtube 影片、場景 .ttt 連結以及所完成的 ZMQ Remote API Python 程式檔案連結 (請放入 downloads 目錄, 並以 .txt 作為副檔名), 將此網頁網址 (即 https://個人_github帳號.github.io/cd2024/w17) 提交連結回報至評量回傳表的對應欄位中.","tags":"w17 09","url":"./2024-Spring-w17-blog-tutorial 09.html"},{"title":"40923157協同產品設計實習2b-17","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引. 製作期末機器人組件 車體繪製 車輪繪製 組合影片 上一個輪胎畫太小了","tags":"w17，第四組，40923157","url":"./40923157-2b-w17.html"},{"title":"40923157協同產品設計實習2b-16","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引. 操作期末報告內容 操作平台錄 程式跑平台控制","tags":"w16，第四組，40923157","url":"./40923157-2b-w16.html"},{"title":"w14&15日誌","text":"新課程任務 w14&15 零件1 零件2 零件3 最終組合 組合組件安插轉接頭 組合件:如何呼叫出球，轉接頭，排序順序","tags":"w14&15","url":"./2024-w14&15-week-diary.html"},{"title":"41123215-W15","text":"協同產品設計實習第十五週實習操作,做期末報告題目: 網際綜合球類競賽機器人協同設計與模擬 競技場景中必須納入數位計時器與類比記分機構 每場競技時間為 10 分鐘 每隊球員機器人依照各組人數平均分為兩隊 每位機器人球員必須同時具備踢球、取球與投球機構 雙方陣營各有足球門與籃球框各一具 球場中由裁判程式於開場時, 在球場正中央落下 10 球 將球踢進對方球門者得 1 分, 將球投入對方籃框者得 5 分","tags":"41123215-W15","url":"./2024-41123215-w15-blog-tutorial.html"},{"title":"20240530 w14 09","text":"完成鋼球平衡台的零件繪製與組合並錄製成影片 零件2和組合 我負責零件2和組合 組合1和組合2因組員零件繪製錯誤而重新錄製 我重新繪製零件1和零件3跟零件4","tags":"w14 09","url":"./2024-Spring-w14-blog-tutorial 09.html"},{"title":"協同產品設計實習W13-15","text":"整理各週指定任務以確保有完整上傳。研究期末報告題目: 網際綜合球類競賽機器人協同設計與模擬的程式檔案與模擬。nxopen 組合零件上傳。 上課內容摘要/相關資料收集 整理各週指定任務以確保有完整上傳。研究期末報告題目: 網際綜合球類競賽機器人協同設計與模擬的程式檔案與模擬。nxopen 組合零件上傳。","tags":"w13-15","url":"./2024-Spring-w13-15-blog-tutorial.html"},{"title":"40923157協同產品設計實習2b-14","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引. 準備使用Coppeliasim進行小組線上連線作動","tags":"w14，第四組，40923157","url":"./40923157-2b-w14.html"},{"title":"40923157協同產品設計實習2b-15","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引. 組合期末組件 組合組件安插轉接頭 如何呼叫出球，轉接頭，排序順序。","tags":"w15，第四組，40923157","url":"./40923157-2b-w15.html"},{"title":"w13日誌","text":"課程評分 w13 如何改成3.7.1的方法 照著老師第一個影片去操作 我們經常提起 Windows 64 位元操作系統環境下的所謂可攜程式系統, 其時主要的考量是希望所開發的工具不僅能在 Microsoft Windows 環境中使用, 同時也能在 Linux (這裡指 Ubuntu 操作系統) 以及 macOS (BSD 系統) 中執行. 無論是 Portable_2024.7z 或者最新釋出專用於 NX1872(2019.06 釋出, 目前已經不再更新) 用來開發 NXOpen Python 程式的可攜環境: Python_for_NX1872.7z, 都是在這樣的架構下產生. 由於數位裝置與網路的無所不在, 產品設計工程師必須能在任何地方進行輔助設計與內容管理, 更重要的是過程中所產生的數位資料必須儘可能在產品生命週期間放置在保全度較高的設備中, 於是對於面對手機、平板與電腦前面的工程師, 必須能將數位資料送到近端環境與雲端環境中的資料中心. 另外一個重點是, 隨著 AI 工具的普及, 雲端產品協同設計將成為主流, 各項系統設計與應用將逐一結合近端與雲端裝置, 成為無所不在的設計整合環境, 因此工程師除了應用既有的輔助設計套件外, 還要學習如何打造自己團隊使用的協同產品設計工具, 以下為兩個簡單的範例: http://229.cycu.org:9447/?semester=1121&classid=設二甲 可以從教務主機擷取各學年的班級課表, 程式碼位於 nfulist_v2_2024.py, 此套件可以用於機械產品開發過程, 透過雲端程式即時擷取在設計運算或參數選擇時, 動態從其他零組件協同供應商或設計便覽伺服器中擷取所需的資料. http://229.cycu.org:88 則是一個線上多人猜數字遊戲, 採用 Python 與 Javascript 結合 WebSocket 編寫, 使用者輸入姓名後, 可以同步參與多人猜數字遊戲, 每一階段各用戶只能最多猜 10 次, 每一輪優勝者可得一分. 程式碼位於 guess_game_server.py 與 guess_game.html. 前面所提到的所謂可攜程式系統, 每一個套件都是使用者可以自行建立或下載的工具, 以下將逐一介紹: Python 解譯系統 利用 gen_py3123_portable.py 在上列舊版的 Python 可攜環境執行, 可在 C:\\tmp 建立最基本的可攜 Python3123 程式目錄. 若將 Python3123 放入先前舊版的可攜 Python371 data 目錄中, 且配合建立 start_ipv6_py3123.bat, 則可以將 Python 3.7.1 版的可攜 Python 升級為 Python 3.12.3 版. 以下影片說明如何從 Python 3.7.1 加入可攜的 Python 3.12.3 版: 但是利用上述流程所建立的 Python 3.12.3 版可攜程式並沒有 pip, 必須啟動 start_ipv6_py3123.bat 後, 在命令列執行 python get-pip.py 才能在可攜系統安裝 pip, 安裝 pip 後, 可以在命令列中以 pip list 查驗目前所安裝的 Python 模組. 前述之所以要在啟動可攜之後的命令列執行 get-pip.py 的原因是, pip.exe 會將執行時的 Python 解譯器位置直接寫入二位元檔案中, 若使用 Pythonw.exe, 所建立的 pip.exe 就只能在 Windows 圖形介面中使用, 因此, 為了讓可攜系統的 pip.exe 能夠在命令列中使用, 必須在執行 get-pip.py 時採用 Python.exe. 其次, 用於 Siemens NXOpen Python 開發用的 版本, 必須配合各 NX 版本編譯其 NXOpen 動態連結程式庫所使用的 Python 版本, 以 NX1872 而言, 必須對應使用 Python 3.7.1 相容版本. 而 NX1980 則必須使用 Python 3.8.8 相容版本, NX2008 與 NX2027 則配合使用 Python 3.8.12 相容版本, NX2206 與 NX2312 必須使用 Python 3.10.4 與 Python 3.10.12 相容版本. Git 可以自行從 https://git-scm.com/download/win 下載 64 位元 Portable 版本. CoppeliaSim 可以自行從 https://www.coppeliarobotics.com/#download 下載, 舊版本則可從 https://www.coppeliarobotics.com/previousVersions 下載. Putty 可以自行從 https://www.putty.org/ 下載. ShareX 可以自行從 https://github.com/ShareX/ShareX/releases 下載. Tiny C Compiler 可以自行從 https://bellard.org/tcc/ 下載. Solvespace 可以自行從 https://solvespace.com/download.pl 下載. SCiTE 可以自行從 https://www.scintilla.org/SciTEDownload.html 下載. Zoomit 可以自行從 https://learn.microsoft.com/en-us/sysinternals/downloads/zoomit 下載. Process Explorer 可以自行從 https://learn.microsoft.com/en-us/sysinternals/downloads/process-explorer 下載. Wink 可以自行從 https://www.debugmode.com/wink.html 下載. MSYS2 可以自行從 https://www.msys2.org/ 下載. NX1872 相關下載 Siemens NX1872.7z (需要登入 @nfu.edu.tw) NX1872 的動態連結程式庫採 Python 3.7.1 版本編譯, 以下可攜 Python 3.7.1 採用 gen_py3123_portable.py 結合 get-pip.py 建立. 可與上列可攜式 NX1872 結合用來開發協同產品設計程式套件. 專用於 NX1872 用來開發 NXOpen Python 程式的可攜環境: Python_for_NX1872.7z 各週指定任務 cd2024 協同產品設計實習課程專案的內容, 主要延續 CAD2023 課程重點, 然後再透過分組, 利用 Odoo PLM 相關文獻閱讀與應用作為協同產品開發流程的參考, 實際進行鋼球平衡台與綜合球賽機器人模擬系統的協同設計. 各週指定任務如下: 個人 cd2024 與分組倉儲的建立及維護. 各分組註冊一個 Odoo 帳號, 選用免費的 PLM 模組, 取得各分組的產品生命週期管理系統網域, 並將參考論文的協同翻譯流程作為工作項目, 在各分組的 PLM 網域系統中留下任務分配與紀錄, 最終產出為一份參考論文的中英文翻譯並列 pdf 檔案, 其中包含各組員的心得報告. 指定在參考論文的翻譯與閱讀過程, 將各組員的 cd2024 課程倉儲納為分組倉儲的子模組, 可以將各組員倉儲中的 LaTeX 原始資料, 整合至分組倉儲中, 採 Github Actions 或近端使用 MikTeX 建立分組的參考論文閱讀報告 pdf 檔案(教學). 要求各分組採協同方式, 在各教學影片上填上字幕並嵌入個人網站, 分工整理影片逐字稿與教學重點, 最後完成期中自評, 在期中考週將自評成績送至教務處. 要求下載 Siemens NX 1872 至個人隨身碟或電腦 (含筆電), 後續專案系統的零組件繪圖可採電腦輔助設計室固態硬碟所安裝的 NX1872 或隨身碟中的可攜系統, 必須透過連網取得認證後才能開啟. 提醒 CoppeliaSim 不同版本中存檔上的差異, 並強調 cd2024 將沿用 cad2023 課程中所使用的 4.5.1 版. 提示 各分組可以利用可攜式 Sourcetree 套件, 在近端充分了解個人倉儲與分組倉儲的各種改版或解決衝突議題. 在第七週摘要出 cd2024 各項分組協同模式的要點及執行方法. 在第八週說明如何應用 AI 協助先前閱讀論文, 整理資料以及延伸模擬程式的方法, 並提出既存鋼球平衡台控制與模擬的實習步驟. 第十週起, 要求學員完成三項實習任務. (建立倉儲與網站連結、PID 控制文獻整理、NX 平台零組件繪圖) 第十二週的三項實習任務 (NXOpen 零組件繪製、分組倉儲設為評分倉儲子模組、足球機器人場景模擬). 課程評分: 學員每週編寫網誌內容佔 40% 每週上課內容摘要與分組報告執行分工及進度整理 相關資料收集與閱讀心得 分組期中報告佔 20% 分組期中 pdf 報告與 mp4 簡報影片 每組至多 8 人 期中報告題目: ODOO PLM 在協同產品設計上的應用 - 以鋼球平衡台機電控制系統設計為例 分組期末報告佔 40% 分組期末 pdf 報告與 mp4 簡報影片 期末報告題目: 網際綜合球類競賽機器人協同設計與模擬 競技場景中必須納入數位計時器與類比記分機構 每場競技時間為 10 分鐘 每隊球員機器人依照各組人數平均分為兩隊 每位機器人球員必須同時具備踢球、取球與投球機構 雙方陣營各有足球門與籃球框各一具 球場中由裁判程式於開場時, 在球場正中央落下 10 球 將球踢進對方球門者得 1 分, 將球投入對方籃框者得 5 分 參考資料: https://github.com/mdecd2024/test-ag1 https://github.com/mdecd2023/2a3-pj3ag4 https://mde.tw/cd2024/downloads/cad2024_foosball.7z https://mde.tw/pj4102 球場參考規格: 競技球: 白色, 直徑 0.1m, 重量 0.5kg 場地: 長 4m x 寬 2.5m, 外圍以足夠高度之隱形柵欄區隔 足球門: 長 0.6m, 高 0.3m, 寬 0.1m 籃板: 長 0.3m, 高 0.3m, 寬 0.1m, 位於足球門上方中央 籃框: 由籃板向場內距離 0.1m, 內徑 0.2m, 框管直徑 0.02 球員尺寸範圍: 長寬高各 0.2m, 重量 5kg 根據上述球場參考尺寸規格建置場景下載: soccer field image from public domain. 模擬場景建構 利用 Solvespace 與 Siemens NX 完成鋼球平衡台零組件繪製後, 將組立件轉為 STL. 從 Solvespace_model _2d_for_cd2024_w6.7z 可知其零件採 mm 單位繪圖, 其平台底座尺寸為 120mm x 120mm. 至於 CoppeliaSim 內建場景中的每一個 Tile 方塊為 50cmx50cm. 因為 Solvespace 內建的 Export Scale Factor 為 1:1=mm, 表示 STL 中 export 的數字為 mm, 因此若將 Solvespace 中 120mmx120mm 的 STL 平台, 以 1:1 直接 import 進入 CoppeliaSim, 將會得到 120mx120m 的龐然大物. 若採 Auto Scale (此處會將 120 縮小 100 倍, 也就是採 0.01 作為 Scale) import 進入 CoppeliaSim, 則會採 cm 作為單位, 得到一組 120cmx120cm 的鋼球平衡台. 至於進入場景後的座標, 以 Solvespace 中的零件繪圖, 其 Y 軸向上, 因此在導入 CoppeliaSim 時, 必須選擇 Y 軸向上. 若採 Siemens NX 進行零組件繪圖的轉入考量, 與上述 Solvespace 零組件相同. 建立球員, 必須先在 CAD 決定尺寸, 以及轉入 CoppeliaSim 時, 將採用的向上座標軸, 以及縮放比例: 以 Solvespace 以及 Siemens NX 為例, 若將球員的設計空間, 設定為 200mm x 200mm x 200mm 且採用 Z 軸向上, 縮小比例為 0.001, 則轉入以 m 為單位的 CoppeliaSim 場景, 則得到正確的 0.2m x 0.2m x 0.2m 的目標空間. 另外, 籃框高度為 0.4m, 因此球員若需採拋球或頂球, 必須設法將球提高至少達到 0.4m 加上 0.1m (球尺寸) 的高度, 才能觸動籃框中的感測器得分. 在 CoppeliaSim Divide 組立件 將鋼球平衡台組立件轉入 CoppeliaSim 的步驟為選擇 File - Import - Mesh, 然後根據上述說明選擇 Scale 以及針對場景向上的座標, 當使用 Solvespace 鋼球平衡台組立件轉入時, 因應 12cmx12cm 的底座希望轉為 1.2mx1.2m 的模擬平台, 因此 Scale 選擇將 120mmx120mm 的 120 數字縮小100 倍(也就是 Scale 為 0.01), 輸入後, 將會得到 1.2mx1.2m的平台底座. 由於 CoppeliaSim 4.5.1 rev4 當採 STL 組立件轉入場景後, 其組立件為一體, 也就是全部被視為一個整體零件. 為了進行後續組立, 可以使用 Edit - Shape Grouping/Merging 中的 Divide 功能, 將各零件分開. 只是 4.5.1 版將組立件 Divide 後, 所有的零件將擁有絕對的共同座標系(因為可以採用程式方法進行零組件的重組與定位), 但各零件均以共同座標為原點, 對於後續手動組立與操控較為不便, 因此可以再利用 Edit - Shape Reference Frame 中的 relocate to mesh center 將各零件的參考座標從共同的絕對座標系, 轉到各自的零件重心位置. 另外, 因為採 Solvespace 繪製的鋼球平衡台, 並沒有繪製各機構(四連桿)連接軸, 因此將零組件導入 CoppeliaSim 後, 必須利用夠深的孔, 在 Shape Editor 模式下建立各連接孔的對應軸, 後續才能將轉動軸元件與新建的連接軸位置與方位進行定位. 利用零件 Hole 產生對應 Cylinder 元件 利用夠深的零件孔壁中的各節點, 可以在 Shape Editor 模式下建立 Cylinder 元件, 其步驟如下: 選擇帶有 Hole (可能必須夠深) 的零件. 利用 CoppeliaSim 左側的 Shape Editor 按鈕, 將場景轉換為 Shape Editor 模式. 利用滑鼠中鍵滑動, 將場景正對所要生成 Cylinder 元件的孔位置, 然後利用滑鼠中間的滾輪將孔儘量拉近. 利用滑鼠左鍵將 Shape Editor 出現的內建視窗, 從 Triangle edit mode, 轉為 Vertex edit mode, 然後左手按住 Shift, 右手滑鼠左鍵按下後, 從左上至右下的位置涵蓋整個孔的位置. 將 Shape Editor 模式的 Vertex edit mode 切回 Triangle edit mode, 然後利用 Extract Clinder 功能, 針對上列步驟所選到的 Vertex(圓孔的內壁點座標) 作為依據, 建立一個圓柱體 (Cylinder) 元件. 關閉 Shape Editor 內建表單視窗後, 選擇 Yes 或 No 都可完成上述從孔的內壁點座標生成圓柱體的步驟.","tags":"w13","url":"./2024-w13-week-diary.html"},{"title":"40923157協同產品設計實習2b-13","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引. 操作影片 協同產品設計實習評分項目第一個影片操作的步驟","tags":"w13，第四組，40923157","url":"./40923157-2b-w13.html"},{"title":"w12日誌","text":"利用 NX 1872 繪製鋼球平衡台所需的零組件, 將各分組倉儲設為評分倉儲的子模組, 跨網路操控模擬場景裝置 w12 實習任務1: 請參考上列教學影片與參考程式, 將鋼球平衡台零組件的繪製與組立任務分配給組員, 由組員分別繳交至少一份零件繪製的 NXOpen Python 程式, 以及至少一份零件組立的 NXOpen Python 程式, 完成後, 請在個人的課程網誌紀錄 w12 實習任務一的執行心得. 零件1 零件2 繪製影片 組合影片1 組合影片2 實習任務2: 各班評分倉儲的各組子模組設定完成後, 可以設法依照先前各組整合分組 LaTeX 報告與分組網誌的方法, 整合全班各組項下各學員的網誌文章 (.html 格式) 與執行專案報告 (.pdf 格式) 實習任務3: 跨網路操控足球機器人進行競技，請各組從 https://github.com/mdecd2023/2a3-pj3ag4 下載該組當時所完成的倉儲資料, 並參考網際手足球機器人場景設計專案報告, 由各組員分別擔任場景競技球員, 利用鍵盤跨網路操控足球機器人進行球賽競技. 成果影片","tags":"w12","url":"./2024-w12-week-diary.html"},{"title":"41123215-W12","text":"協同產品設計實習第十二週實習操作, 利用 NX 1872 繪製鋼球平衡台所需的零組件, 將各分組倉儲設為評分倉儲的子模組, 跨網路操控模擬場景裝置. 實習任務一 繪製鋼球平衡台零組件 零件五成品 零件五程式 心得:繪製零件五的難度雖然不高,但是會因為過程中給錯尺寸或是畫完後對影片過程不滿意而一直重新錄製","tags":"41123215-W12","url":"./2024-41123215-w12-blog-tutorial.html"},{"title":"40923157協同產品設計實習2b-12","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引. 12W任務 零件3影片 組合件 12週心得: 繪製零件時我的不像其他製圖軟件麼的好用，分別會製了五個零件雖然不是甚麼困難的零件，但是研究怎麼繪製也花了不少的時間，特別在組裝的時候遇到的問題最多。 任務3","tags":"w12，第四組，40923157","url":"./40923157-2b-w12.html"},{"title":"w12 34","text":"協同產品設計實習第十一週實習操作, 各學員利用 NX 1872 繪製鋼球平衡台所需的零組件 W12 實習項目說明 W12 實習任務內容 說明 任務一 任務二","tags":"w12 34","url":"./2024-cd-2b-w12 34.html"},{"title":"20240509 w12 09","text":"協同產品設計實習第十二週實習操作, 各學員利用 NX 1872 繪製鋼球平衡台所需的零組件, 將各分組倉儲設為評分倉儲的子模組, 跨網路操控模擬場景裝置. 將各分組倉儲設為評分倉儲的子模組 實習任務二: 將分組倉儲設為評分網站子模組 2a 評分倉儲: https://github.com/mdecd2024/2astud-2asite 2b 評分倉儲: https://github.com/mdecd2024/2bstud-2bsite 以 我們2b 第四組分組倉儲 https://github.com/mdecd2024/2b-midbg4 為例, 設為 2bstud-2bsite 倉儲名稱為 g4 的子模組指令為: git submodule add https://github.com/mdecd2024/2b-midbg4 g4 其餘各班與各組的子模組則依序命名為 g1, g2, g3 ......, 依此類推. 各班評分倉儲的各組子模組設定完成後, 可以設法依照先前各組整合分組 LaTeX 報告與分組網誌的方法, 整合全班各組項下各學員的網誌文章 (.html 格式) 與執行專案報告 (.pdf 格式) 請各分組先在各組的分組網誌與分組報告中說明, 該如何將分組整合流程擴大到全班協同?","tags":"w12 09","url":"./2024-Spring-w12-blog-tutorial 09.html"},{"title":"協同產品設計實習W12","text":"本周有三個作業-1.利用 NX 1872 繪製鋼球平衡台所需的零組件2.將各分組倉儲設為評分倉儲的子模組3.跨網路操控模擬場景裝置. 上課內容摘要/相關資料收集 本周有三個作業1.利用 NX 1872 繪製鋼球平衡台所需的零組件2.將各分組倉儲設為評分倉儲的子模組3.跨網路操控模擬場景裝置. w12 實習任務一的執行心得 成功完成鋼球平衡台零組件的繪製及繳交至少一份零件繪製的 NXOpen Python 程式，學習到了如果利用nx的錄製功能利用python紀錄了鋼球平衡台零組件。","tags":"w12","url":"./2024-Spring-w12-blog-tutorial.html"},{"title":"w11日誌","text":"利用 NX 1872 繪製鋼球平衡台所需的零組件 w11 零件繪製過程","tags":"w11","url":"./2024-w11-week-diary.html"},{"title":"41123215-W11","text":"協同產品設計實習第十一週實習操作, 利用 NX 1872 繪製鋼球平衡台所需的零組件.","tags":"41123215-W11","url":"./2024-41123215-w11-blog-tutorial.html"},{"title":"40923157協同產品設計實習2b-11","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引. 這禮拜上傳心得到 https://github.com/mdecd2024/2bstud-2bsite 裡面","tags":"w11，第四組，40923157","url":"./40923157-2b-w11.html"},{"title":"w11 34","text":"協同產品設計實習第十一週實習操作, 各學員利用 NX 1872 繪製鋼球平衡台所需的零組件 鋼球平衡台自動控制系統模擬 建立協同 Web-based 機電系統模擬設計必須涉及的議題包括： 如何使用 NX 執行零組件繪圖 - NX 參考資料 如何使用1872版安裝及可攜版 - NX1872 如何啓動及連網認證 - NX1872 了解啓動後用戶設定的存檔位置 - NX1872 認識 NX 的目錄模組架構 - NX 認識 NXOpen Python 程式延伸架構 - NXOpen 了解 Journal 程式設定、建立及執行（internal 及 run_journal.exe 用法） 了解如何針對設計繪圖尺寸單位選擇 - 建立新零件檔案時由 Units 選單選則 mm 或 inches 學習草圖建構、參數選用及長出特徵使用 - NX 參考資料 學習如何完成零件組立 - NX 參考資料 了解零組件轉檔相關知識（如選用零組件座標系統、STL格式及尺寸比例） 了解如何轉入 CoppeliaSim，如何選擇合用的尺寸及比例 了解如何進行場景組件的座標系統轉換 了解開放式機構及封閉式機構的場景如何設置 認識場景存檔的三種格式（binary與XML間的轉換及應用)及應用時機 瞭解如何運用 Web-based 場景模擬串流 學習如何建立場景控制程式（internal Lua、Python、Remoteapi Python、IPv4 Websocket&ZMQ vs IPv6 Websocket&ZMQ) 了解如何協同整理資料、編寫網誌、建立網際簡報及結案報告","tags":"w11 34","url":"./2024-cd-2b-w11 34.html"},{"title":"20240502 w11 09","text":"協同產品設計實習第十一週實習操作, 學習利用 NX 1872 繪製鋼球平衡台所需的零組件. 鋼球平衡台自動控制系統模擬 請根據 Solvespace_model _2d_for_cd2024_w6.7z 零組件尺寸, 利用 Siemens NX1872.7z (需要登入 @nfu.edu.tw, cd2024 採用電腦安裝的 NX1872 或隨身碟中的 NX1872) 執行零組件繪圖, 完成後請將過程影片放入個人與分組網站中. 建立協同 Web-based 機電系統模擬設計必須涉及的議題包括： 如何使用 NX 執行零組件繪圖 - NX 參考資料 如何使用1872版安裝及可攜版 - NX1872 如何啓動及連網認證 - NX1872 了解啓動後用戶設定的存檔位置 - NX1872 認識 NX 的目錄模組架構 - NX 認識 NXOpen Python 程式延伸架構 - NXOpen 了解 Journal 程式設定、建立及執行（internal 及 run_journal.exe 用法） 了解如何針對設計繪圖尺寸單位選擇 - 建立新零件檔案時由 Units 選單選則 mm 或 inches 學習草圖建構、參數選用及長出特徵使用 - NX 參考資料 學習如何完成零件組立 - NX 參考資料 了解零組件轉檔相關知識（如選用零組件座標系統、STL格式及尺寸比例） 了解如何轉入 CoppeliaSim，如何選擇合用的尺寸及比例 了解如何進行場景組件的座標系統轉換 了解開放式機構及封閉式機構的場景如何設置 認識場景存檔的三種格式（binary與XML間的轉換及應用)及應用時機 瞭解如何運用 Web-based 場景模擬串流 學習如何建立場景控制程式（internal Lua、Python、Remoteapi Python、IPv4 Websocket&ZMQ vs IPv6 Websocket&ZMQ) 了解如何協同整理資料、編寫網誌、建立網際簡報及結案報告","tags":"w11 09","url":"./2024-Spring-w11-blog-tutorial 09.html"},{"title":"協同產品設計實習W11","text":"利用 NX 1872 繪製鋼球平衡台所需的零組件.了解如何協同整理資料、編寫網誌、建立網際簡報及結案報告。取得對倉儲的管理權限，學習利用分支完成多人推送時的困難點。 上課內容摘要/相關資料收集 利用 NX 1872 繪製鋼球平衡台所需的零組件.了解如何協同整理資料、編寫網誌、建立網際簡報及結案報告。取得對倉儲的管理權限，學習利用分支完成多人推送時的困難點。 分組報告執行分工及進度整理 正在學習nx的資料。學會利用分支完成多人推送時的困難點。","tags":"w11","url":"./2024-Spring-w11-blog-tutorial.html"},{"title":"w10日誌","text":"延續上週 w10 W10 起 Replit 已經可以用來維護分組倉儲 Replit 帳號維護分組倉儲 建立各班學員的倉儲、網站與分組連結 這是 W10 實習的任務一: 已知: 2b 初步資料放入數列 可以將 2b.txt 即時資料取出, 並且將每一行隔開後, 逐一放入數列. 後續處理: 只要透過 for 重複迴圈, 就可以從上列資料中每位學員的基本資料 (學號、Github 帳號與組別) 中直接在網頁建立所需的 html. 學員倉儲連結 template: https://github.com/學員帳號/cd2024 學員網站連結 template: https://學員帳號.github.io/cd2024 2b 分組倉儲連結 template: https://github.com/mdecd2024/2b-midbg組別 2a 分組倉儲連結 template: https://github.com/mdecd2024/2a-midag組別 處理結果: 列出 2b 各學員評分相關網站 列出 2a 各學員評分相關網站 鋼球平衡台 PID 控制與模擬 這是 W10 實習的任務二: 請下載 cd2024_ball_balancing_platform_control_ref.7z, 閱讀後請將摘要內容放入個人與分組網誌中. 各篇論文要點摘要： 論文一：Construction and theoretical study of a ball balancing platform 探討自動控制理論在穩定動態系統時的局限性，以球體平衡平台為例。 建立球體平衡平台的理論模型，並與實際搭建的平台進行比較。 分析理論與實際結果之間的差異，探討控制理論與系統實施的挑戰。 結論： 線性控制可以實現球體平衡平台的良好性能，但存在靜態誤差。 理論與實際結果的差異主要來自於物理模型的誤差和電子元件的非理想特性。 穩定動態系統的性能受限於狀態調整的靈活性、控制器設計和輸入數據的準確性。 論文二：A real time control system for balancing a ball on a platform with FPGA parallel implementation 提出基於 PID 控制器的解決方案，以提高球體在平台上的位置調節精度。 使用 FPGA 實現平行計算，以提高系統速度和性能。 開發球體平衡平台的轉移函數，並合成 PID 控制器。 結論： 透過 FPGA 平行計算實現的 PID 控制器能有效提高球體位置調節精度。 該方案可應用於控制具有多個參數的高速物件。 論文三：Simulation and Experimental Study of Ball Position Control at Biaxial Platform using State Space Approach 設計和比較三種控制結構，用於自動穩定球體在平台上的位置和軌跡追踪：PD 控制器、狀態空間反饋和帶狀態空間回饋的狀態空間觀測器。 使用牛頓法推導球體平衡平台的數學模型，並設計直流電機位置迴路控制。 結論： 三種控制結構均能實現穩定控制，但狀態空間觀測器具有最佳性能。 該研究建立了一個教育平台，用於向非技術人員解釋基本控制系統原理。 論文四：Design and Implementation a Ball Balancing System for Control Theory Course 開發一個球體平衡系統，使用微控制器和控制演算法來調節球體在梁上的平衡。 利用超聲波傳感器獲取球體位置，並使用 PID 控制演算法調整梁的角度。 開發介面程式，將即時位置曲線繪製在 MATLAB 中。 結論： 球體平衡系統是一個低成本的教育工具，可用於教授控制理論的應用。 該系統允許學生將理論知識應用於實踐中，並了解封閉迴路回饋系統和 PID 演算法的原理。 論文五：Ball on the plate balancing control system 設計一個二自由度球體平衡實驗平台，用於測試和驗證平衡控制演算法。 使用電阻式觸摸屏獲取球體位置數據，使用步進電機和位置傳感器控制平台傾斜角度。 設計基於 AVR 微控制器的雙環下屬控制系統，使用 PID 控制器維持球體平衡。 結論： 該系統使用步進電機替代伺服電機，並無需外部電腦進行圖像處理，具有成本效益和易於控制的優勢。 未來計劃改進球體位置回饋信號的濾波，以提高控制系統的速度和品質。 論文六：2D Ball Balancer Control using QUARC 使用 QUARC 軟體設計和實現球體在二維平台上的位置控制。 設計 PD 和 PID 控制器，並探討設定點權重和積分器抗飽和等控制技術。 使用攝像頭讀取球體位置，並進行校準和轉換。 結論： PD 和 PID 控制器均能實現球體位置控制，但 PID 控制器在跟踪斜坡和正弦參考信號時具有更好的性能。 該實驗涵蓋了建模、控制器設計、模擬和實施等多個控制系統的關鍵步驟，為學生提供了寶貴的學習經驗。 接下來, 必須要設法了解, 哪一篇或哪幾篇論文對我們解決下列問題最有參考價值! 請從下列檔案中, 在個人與分組網站中說明從零組件繪圖、轉入 CoppeliaSim, 並透過 PID 控制後, 展示在不同的控制參數設定, 鋼球的 x 座標與 y 座標運動路徑圖. ball_beam_balancing_PID_control_coppeliasim_1d_and_2d_cd2024_w9.7z (password required to download) Solvespace_model _2d_for_cd2024_w6.7z 實習步驟: 開啟可攜程式系統中的 CoppeliaSim 開啟鋼球平衡台模擬場景 啟動可攜程式系統, pip install keyboard cbor pyzmq matplotlib 在 SciTE 中執行上列程式, 確定系統穩定後, 按下 q 終止模擬 matplotlib 將畫出鋼球在平台上的 x 與 y 座標圖 鋼球平衡台零組件繪圖 這是 W10 實習的任務三: 請根據 Solvespace_model _2d_for_cd2024_w6.7z 零組件尺寸, 利用 Siemens NX1872.7z (需要登入 @nfu.edu.tw, cd2024 採用電腦安裝的 NX1872 或隨身碟中的 NX1872) 執行零組件繪圖, 完成後請將過程影片放入個人與分組網站中.","tags":"w10","url":"./2024-w10-week-diary.html"},{"title":"41123215-W10","text":"協同產品設計實習第十週實習操作, 透過 ChatGPT、Gemini 1.5 Pro 與 Claude 3 的協助下進行. 建立各班學員的倉儲、網站與分組連結 根據 2b.txt 中的學號、Github 帳號與組別, 設法在各組員與分組網站中, 列出各學員的 cd2024 倉儲、網站, 以及各班各組的期中報告倉儲與網站連結. 鋼球平衡台 PID 控制與模擬 下載 cd2024_ball_balancing_platform_control_ref.7z , 將摘要內容放入個人與分組網誌中","tags":"41123215-W10","url":"./2024-41123215-w10-blog-tutorial.html"},{"title":"40923157協同產品設計實習2b-10","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引. w10 期中考後第一周 鋼球平衡台 PID 控制與模擬摘要內容","tags":"w10，第四組，40923157","url":"./40923157-2b-w10.html"},{"title":"w10 34","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引. 1.w10 鋼球平衡台模擬控制 cd2024_w10.7z 請各組員下載上列鋼球平衡台場景與 ZMQ RemoteAPI Python 控制程式後, 先採單機啟動場景與控制外, 再以跨 IPv6 與 IPv4 網路連線控制後, 將模擬過程影片與實際操作心得放置個人與分組網站與網誌中. 2.鋼球平衡台 PID 控制與模擬 W10 實習的任務二: 請下載 cd2024_ball_balancing_platform_control_ref.7z , 閱讀後請將摘要內容放入個人與分組網誌中.","tags":"w10 34","url":"./2024-cd-2b-w10 34.html"},{"title":"20240425 w10 09","text":"協同產品設計實習的專案實習, 透過 ChatGPT、Gemini 1.5 Pro 與 Claude 3 的協助下進行. 協同資料處理 請各班各組根據 2a_cd2024_midterm.csv , 以及 2b_cd2024_midterm.csv 中的學號、Github 帳號與組別, 設法在各組員與分組網站中, 列出各學員的 cd2024 倉儲、網站, 以及各班各組的期中報告倉儲與網站連結.","tags":"w10 09","url":"./2024-Spring-w10-blog-tutorial 09.html"},{"title":"協同產品設計實習W10","text":"在各組員與分組網站中, 列出各學員的 cd2024 倉儲、網站, 以及各班各組的期中報告倉儲與網站連結./鋼球平衡台 PID 控制與模擬摘要內容 上課內容摘要/相關資料收集 在各組員與分組網站中, 列出各學員的 cd2024 倉儲、網站, 以及各班各組的期中報告倉儲與網站連結./鋼球平衡台 PID 控制與模擬摘要內容 分組報告執行分工及進度整理 在個人網頁上更新鋼球平衡台 PID 控制與模擬摘要內容","tags":"w10","url":"./2024-Spring-w10-blog-tutorial.html"},{"title":"w9日誌","text":"延續上週 w9","tags":"w9","url":"./2024-w9-week-diary.html"},{"title":"40923157協同產品設計實習2b-9","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引. w9 期中考周","tags":"w9，第四組，40923157","url":"./40923157-2b-w9.html"},{"title":"41123215-W9","text":"協同產品設計實習的第九週, 2b 期中自評、介紹 Google AIStudio 與 Claude.io","tags":"41123215-W9","url":"./2024-41123215-w9-blog-tutorial.html"},{"title":"w9 34","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引. 1.協同資料處理 請各班各組根據 2a_cd2024_midterm.csv , 以及 2b_cd2024_midterm.csv 中的學號、Github 帳號與組別, 設法在各組員與分組網站中, 列出各學員的 cd2024 倉儲、網站, 以及各班各組的期中報告倉儲與網站連結. 過程中, 請詳細說明各組及學員的倉儲與網站中的連結資料如何建立? 手動輸入? 利用程式進行處理? 或者採分工合作方式建立? 2b step1 取出資料放入數列 2.鋼球平衡台 PID 控制與模擬 請下載 cd2024_ball_balancing_platform_control_ref.7z , 閱讀後請將摘要內容放入個人與分組網誌中.","tags":"w9 34","url":"./2024-cd-2b-w9 34.html"},{"title":"協同產品設計實習W9","text":"2b 期中自評、介紹 Google AIStudio 與 Claude.io 上課內容摘要/相關資料收集 2b 期中自評、介紹 Google AIStudio 與 Claude.io 分組報告執行分工及進度整理 2b 期中自評","tags":"w9","url":"./2024-Spring-w9-blog-tutorial.html"},{"title":"w8日誌","text":"藉由ChatGPT、Gemini 1.5 Pro 與 Claude 3 等AI協助 w8 協同資料處理 請各班各組根據 2a_cd2024_midterm.csv, 以及 2b_cd2024_midterm.csv 中的學號、Github 帳號與組別, 設法在各組員與分組網站中, 列出各學員的 cd2024 倉儲、網站, 以及各班各組的期中報告倉儲與網站連結. 1.取出資料放入數列 鋼球平衡台 PID 控制與模擬 請下載 cd2024_ball_balancing_platform_control_ref.7z, 閱讀後請將摘要內容放入個人與分組網誌中. 2.對 Gemini 1.5 Pro 提問: 以下為利用 PID 控制 CoppeliaSim 鋼球平衡台場景的 ZMQ RemoteAPI Python 程式, 請利用 Python 模組將系統控制過程, 鋼球在平衡台上的 x 方向座標與 y 方向, 利用 matplotlib 畫出來. \"這裡附上原本的 PID 控制程式碼\"","tags":"w8","url":"./2024-w8-week-diary.html"},{"title":"41123215-W8","text":"協同產品設計實習的第八週, 將每位組員各一分鐘的影片報告放到各分組網誌, 說明已經完成的個人與團隊分配任務製作結果.","tags":"41123215-W8","url":"./2024-41123215-w8-blog-tutorial.html"},{"title":"41123215-W6","text":"協同產品設計實習的第六週, 說明協同 NX 零組件繪圖以及 CoppeliaSim 場景模擬相關檔案格式.","tags":"41123215-W6","url":"./2024-41123215-w6-blog-tutorial.html"},{"title":"41123215-W5","text":"協同產品設計實習的第五週, 教學內容為先前影片整理、分組網誌的統整與 NX 零組件繪圖.","tags":"41123215-W5","url":"./2024-41123215-w5-blog-tutorial.html"},{"title":"41123215-W4","text":"協同產品設計實習的第四週, 各分組需要明確界定任務需求與分工時序, 隨著各組協同設計流程的進行, 分組倉儲與網站的改版越發複雜, 此時若導入 Source Tree 協助各組員更清楚看到倉儲改版架構, 另外 Git Branch 的應用.","tags":"41123215-W4","url":"./2024-41123215-w4-blog-tutorial.html"},{"title":"41123215-W3","text":"2024 Spring 協同產品設計實習的第三週, 主要說明如何善用 Github Codespaces 與 Gitpod, 以及將組員倉儲設為分組倉儲的子模組, 同時導入 LaTeX 轉 pdf 機制, 啟動期中分組報告的製作.","tags":"41123215-W3","url":"./2024-41123215-w3-blog-tutorial.html"},{"title":"41123215-W2","text":"2024 Spring 協同產品設計實習的第二週, 主要利用 Github Classroom 進行分組, 並且說明如何利用 Github Codespaces 維護個人與分組網站.","tags":"41123215-W2","url":"./2024-41123215-w2-blog-tutorial.html"},{"title":"40923157協同產品設計實習2b-8","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引. 說明在期中之前做了哪些事情的影片介紹","tags":"w8，第四組，40923157","url":"./40923157-2b-w8.html"},{"title":"w8 34","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引. 1.內容管理系統 協同產品設計實習課程使用網際內容管理系統, 採 Github Classroom 建立分組倉儲, 並由學員自行利用 cmsimde_site 作為 Github 倉儲的引擎目錄, 利用 Python 執行網頁編輯. 之後再轉檔為靜態網頁, 以便利用 Github Pages 所提供的 WWW 伺服器呈現協同產品設計過程的相關多媒體內容. 從協同設計的架構上, 個人與分組的倉儲中, 總共設計了以下幾種內容的協同模式: 1.分組網站內容的協同 - 其中包括章節式的網站內容與網誌內容, 可以透過 Python 程式方法整合各學員子模組中的 config/content.htm 以及 markdown/*.md 檔案至分組網站中 2.分組報告內容的協同 - 採用的是 Github Actions 與近端 MikTeX 中的 xelatex 將 .tex 轉為 pdf 的整合過程 3.分組產品設計的 PLM 協同 - 採用的是 Odoo PLM 模組, 讓各分組可以將網站內容、報告內容視為產品, 從協同架構的訂定作為起點, 完成資料展示作為終點, 逐一將過程的協調、派任與執行方法納入 PLM 系統管理 4.分組零組件設計的協同 - 分別採用 Solvespace 作為鋼球平衡台範例, 讓學員使用 Siemens NX 1872 進行協同零組件繪圖設計, 並將各零件的 .prt 檔案納入各學員的倉儲進行組立, 以便找出最佳的設計分工以及零組件轉檔流程 5.分組模擬場景設計的協同 - 當各分組順利完成鋼球平衡台的零組件轉檔後, 一旦進入 CoppeliaSim 場景後, 必須逐一配置感測器 (Sensors)、致動器 (Actuators) 以及 ZMQ RemoteAPI Python 程式, 主要探討如何將此一場景模擬過程在 CoppeliaSim XML 檔案格式與 Siemens NXOpen Python 零件程式檔案間, 找到合用或最佳的協同產品設計模式. 6.分組專案簡報設計的協同 - 在上述各產品設計階段所累積的各種資料, 該如何有效整合到專案完成後必須進行的網際簡報中. 2.分組網站內容的協同 其中首先要求各組員必須每週在 cd2024 倉儲中的 markdown 目錄編寫 markdown 網誌文章, 再經由 Pelican 轉檔至 blog 目錄中的超文件網誌. 由於 Pelican 採用 Python 檔案進行設定, 因此可以在轉檔的過程中, 將各子目錄中的組員倉儲網誌集合到分組倉儲中的 combined_markdown 目錄之後, 再指定將網誌超文件轉至各分組倉儲的 blog 目錄. 由於分組網誌內容協同時, 所有組員所編寫的 markdown 文章必須存入 combined_markdown 目錄, 因此 markdown 網誌文章檔案的命名不可重複, 且各網誌文章的 Slug 字串將會被當作用來命名轉檔後的超文件檔案名稱, 因此也不能重複. 至於當各組員採用 Replit 維護個人倉儲內容時, 可以直接從 Replit Connect 至 Github 取得維護倉儲的權限, 旦卻無法直接用管理分組倉儲, 因為各組員雖然擁有管理分組倉儲的權限, 但是無法在 Replit 中以免費的組員帳號管理 Github Classroom 所取得的分組倉儲. 而必須動態納入針對分組倉儲的 OpenSSH 管理權限.","tags":"w8 34","url":"./2024-cd-2b-w8 34.html"},{"title":"20240411 w7 09","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引. 第七周","tags":"w7 09","url":"./2024-Spring-w7-blog-tutorial 09.html"},{"title":"w7日誌","text":"清明連假 w7 清明連假","tags":"w7","url":"./2024-w7-week-diary.html"},{"title":"40923157協同產品設計實習2b-7","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引. Update main.yml, 加入取下子模組內容的 scripts 觀看老師的影片一部部操做，更新了在分組網站下自己的子模組內容","tags":"w7，第四組，40923157","url":"./40923157-2b-w7.html"},{"title":"w7 34","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引.","tags":"w7 34","url":"./2024-cd-2b-w7 34.html"},{"title":"w6日誌","text":"自行作業分組工作 w6 分組工作 主要聽從組長安排","tags":"w6","url":"./2024-w6-week-diary.html"},{"title":"40923157協同產品設計實習2b-6","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引. w6 加入 LateX 檔案所需目錄 使用小黑窗進行了兩次推送，把miktex-portable拉入虛擬Y槽，而後在rplit進行推送，分別推入了個人網站，再來是小組網站，讓一個團隊能夠點選就能看到LateX 檔案所需目錄的資料進行下載。 @echo off set Disk=y subst %Disk%: \"data\" %Disk%: set HomePath=%Disk%:\\home_ipv6 set HomeDrive=%Disk%:\\home_ipv6 set Home=%Disk%:\\home_ipv6 set USERPROFILE=%Disk%:\\home_ipv6 REM 將系統 Python 程式的 io 設為 utf-8 set PYTHONIOENCODING=\"utf-8\" set PYTHONPATH=%Disk%:\\Python312\\DLLs;%Disk%:\\Python312\\Lib;%Disk%:\\Python312\\Lib\\site-packages; set PYTHONHOME=%Disk%:\\Python312 REM for putty set GIT_SSH=%Disk%:\\putty\\plink.exe REM 設定跟 Python 有關的命令搜尋路徑 set path_python=%Disk%:\\Python312;%Disk%:\\Python312\\Scripts; REM 設定跟Git 有關的命令搜尋路徑 set path_git=%Disk%:\\portablegit\\bin; REM 設定 msys2 64 位元的執行路徑 set path_msys2=%Disk%:\\msys64_20210419\\mingw64\\bin; set path_lua=%Disk%:\\lua-5.3.5\\; set path_cmake=%Disk%:\\cmake-3.21.0-windows-x86_64\\bin; set path_tcc=%Disk%:\\tcc; set path_gnuplot=%Disk%:\\gnuplot\\bin; REM for execute scite directly set path_scite=%Disk%:\\wscite; set path_miktex=%Disk%:\\miktex-portable\\texmfs\\install\\miktex\\bin\\x64; REM for fasm set path_fasm=%Disk%:\\flat_asm; REM Xcopy %Disk%:\\home_ipv6\\AppData\\Roaming\\Coppeliasim C:\\users\\%USERNAME%\\AppData\\Roaming\\Coppeliasim /E /H /C /I /Y path=%Disk%:;%path_python%;%path_msys2%;%path_cmake%;%path_lua%;%path_git%;%path_tcc%;%path_gnuplot%;%path_scite%;%path_miktex%;%path_fasm%;%path%; start /MIN cmd.exe start /MIN cmd.exe start /MIN cmd.exe start /MIN cmd.exe start /MIN %Disk%:\\wscite\\SciTE.exe start /MIN %Disk%:\\wscite\\SciTE.exe REM start %Disk%:\\miktex-portable\\texmfs\\install\\miktex\\bin\\x64\\miktex-console.exe --hide --mkmaps Exit","tags":"w6，第四組，40923157","url":"./40923157-2b-w6.html"},{"title":"w6 34","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引. 1.ODOO PLM 論文中英並列任務 由各組員在其個人的 cd2024 倉儲中, 以 LaTeX 格式分工完成下列文章的英文與中文翻譯並列資料, 最後在分組網站的 Release 或 downloads 區完成 2b-midbgx_report.pdf 的製作. 若要在近端使用可攜程式環境編譯分組 LaTeX 報告, 請下載 miktex-portable.7z (需要密碼, 下載 167MB, 解開壓縮檔案後約 1GB) 以及參考資料: latex_images_github.7z (需要密碼) 2021 ANALYSIS OF THE ODOO SOFTWARE CAPABILITIES REGARDING PRODUCT LIFECYCLE MANAGEMENT, MANUFACTURING EXECUTION SYSTEMS AND THEIR INTEGRATION.pdf or local download (password required) (Odoo 軟體在產品生命週期管理、製造執行系統及其整合上的功能分析) 2.ODOO, NX, Sourcetree, Github and Replit 利用 ODOO PLM, Siemens NX, Sourcetree, Github 分組倉儲與 Replit 打造協同產品開發環境 下載 Siemens NX1872.7z (需要登入 @nfu.edu.tw, cd2024 採用電腦安裝的 NX1872 或隨身碟中的 NX1872) 下載 Sourcetree_portable.7z (需要密碼) 其他工具包括 CoppeliaSim, SciTE, Portablegit, Putty, Zoomit, Python, Solvespace 以及 Process Explorer 等. 配置重點: NX, Sourcetree 與 CoppeliaSim 設定檔案與管理分組倉儲的權限, 必須存至可攜系統, 並分別從可攜系統啟動後的命令列中啟動.","tags":"w6 34","url":"./2024-cd-2b-w6 34.html"},{"title":"20240328 w6 09","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引. 第六周","tags":"w6 09","url":"./2024-Spring-w6-blog-tutorial 09.html"},{"title":"協同產品設計實習W5","text":"將組員的個人倉儲納入分組倉儲成為子模組/在 Replit 維護分組倉儲/善用 Github Codespaces 與 Gitpod 上課內容摘要/相關資料收集 協同產品設計實習的第五週, 教學內容為先前影片整理、分組網誌的統整與 NX 零組件繪圖. 分組報告執行分工及進度整理 在影片上填上字幕/從影片字幕中整理出逐字稿, 放在影片下方, 以 .txt 連結安排/教學影片下方, 以摘要方式說明該影片的教學重點.","tags":"w5","url":"./2024-Spring-w5-blog-tutorial.html"},{"title":"w5日誌","text":"公假未到課 w5 公假 跟學校 藝術中心 前往台中資訊圖書館參加開幕記者會，並擔任開幕司儀，該次展出主題為 前瞻機械主題展 。","tags":"w5","url":"./2024-w5-week-diary.html"},{"title":"40923157協同產品設計實習2b-5","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引. 第五周網誌 教學影片分組整理並自評","tags":"w5，第四組，40923157","url":"./40923157-2b-w5.html"},{"title":"w5 34","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引. 1.如何統整組員子模組中的協同設計網誌 當各組員每週的協同設計網誌文章放在個別的 cd2024 倉儲的 markdown 目錄中, 只要修改分組倉儲中的 pelicalconf.py, 使用 Pelican 設定中的 PATH 與 OUTPUT_PATH 變數, 指定網誌統整目錄, 就可以在分組倉儲中納入所有組員在子模組中所編寫的協同網誌. 實際的設定操作 pelicanconf_py.txt , 是利用 pelicanconf.py 中的程式設定段, 將子模組中 markdown 目錄的 .md 動態複製到分組倉儲中的 combined_directory, 並避開分組倉儲與學員子模組倉儲中的 pages 目錄下的 .md 檔案後, 再進行網誌轉檔, 並且所產生的網誌超文件將存入所設定的 blog 目錄. 完成設定後的網誌轉檔指令為: pelican -s local_publishconf.py 表示要利用 local_publishconf.py 的設定進行轉檔, 且先前有關 pelicanconf.py 的設定也將導入執行. 過程中, 各組員必須將個別的網誌 .md 檔案名稱加上前綴字串, 例如: \"學號_\" 加上獨一無二的網誌 Slug 字串名稱, 且 Category 使用該組員的學號作為標示. 之後各組統整轉檔時, 才不至於發生相同網誌文章檔案名稱衝突的錯誤, 且從各分組網誌的 Categories 中即可找到各組員所編寫的所有網誌內容. 2.利用 NX1872 協同繪製零組件 從電腦輔助設計室中的電腦 C:\\Program Files\\Siemens\\NX1872 取得所需的 NX 套件目錄檔案, 之後將 NX1872 目錄存入隨身碟後, 可利用下列 start_USB_nx1872.bat 啟動. 電腦輔助設計室中 C: 安裝 NX1872, D: 則配置 NX2206 與 NX12, 若在電腦教室則可利用下列批次檔案啟動 NX, 若在各自的電腦或隨身碟帶有各版次的 NX 資料, 只需要透過網路取得授權, 就可直接從 USB 中執行各版次的 NX.","tags":"w5 34","url":"./2024-cd-2b-w5 34.html"},{"title":"20240321 w5 09","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引. 第五周","tags":"w5 09","url":"./2024-Spring-w5-blog-tutorial 09.html"},{"title":"協同產品設計實習W4","text":"將組員的個人倉儲納入分組倉儲成為子模組/在 Replit 維護分組倉儲/善用 Github Codespaces 與 Gitpod 上課內容摘要/相關資料收集 說明如何將組員的個人倉儲納入分組倉儲成為子模組。說明如何在 Replit 維護分組倉儲。Gitpod 與 Codespaces 類似, 也是採用 Visual Studio Code 網際介面, 可讓使用者維護位於 Github 的倉儲，差別是一旦在 Gitpod 導入的分組網站 SSH 管理權限, 不會像 Replit 免費帳號下, 系統會定期刪除免費帳號使用者的 .ssh 目錄。 分組報告執行分工及進度整理 將組員的個人倉儲納入分組倉儲成為子模組/在 Replit 維護分組倉儲/善用 Github Codespaces 與 Gitpod","tags":"w4","url":"./2024-Spring-w4-blog-tutorial.html"},{"title":"w4日誌","text":"試用odoo w4 odoo 已申辦帳號，但還未了解其內容。","tags":"w4","url":"./2024-w4-week-diary.html"},{"title":"40923157協同產品設計實習2b-4","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引. 建立個人最短網址網站 Github Pages服務可以讓 Github 帳號的擁有者, 使用\"帳號.github.io\"作為倉儲名稱, Github 會自動將此網站設定 Github Pages, 假如此倉儲內部帶有超文件, 則此倉儲對應的網址將會是 https://帳號.github.io 說明如何下載 replit_main2.7z 並在倉儲中建立 下載【replit】(https://mde.tw/wcm2024/downloads/static.txt) (https://mde.tw/wcm2024/downloads/main2.txt) 其中包含main2.py與ststic.py，只要在shll執行python3 main2.py就可以執行倉儲內的靜態網站顯示，另一方面諾要取消先前的python3 main2.py，只需要在shll頁面按下shift + c c代表cancle也就是取消，諾要執行動態網站，可以在shll執行python3 main.py，或者使用replit的Run按健 內容管理系統 使用者可以自行利用 cmsimde_site 倉儲作為 Template, 建立自己的網站內容管理系統. 引用網站網址連結的方法: cmsimde_site - 在文章中多次引用同一個網站連結時, 可以使用此種方法. https://github.com/mdecycu/cmsimde_site - 假如想要快速將網址套用 html 網站連結, 可以使用此種方法. cmsimde_site - 也可以使用 Markdown 的標準網站連結使用格式. ## 引用 Python 程式的方法 for i in range(10): print(i, \"列出字串\") 也可以直接在 .md 檔案中使用 html 標註, 或加入 Javascript 或 Brython 程式碼. 從 1 累加到 100: 1 add to 100 將 iterable 與 iterator 相關說明 , 利用 Brython 與 Ace Editor 整理在這個頁面. Filename: .py Run Output 清除輸出區 清除繪圖區 Reload 從 1 累加到 100 part2: 1 add to 100 cango_three_gears BSnake AI Tetris Rotating Block Filename: .py Run Output 清除輸出區 清除繪圖區 Reload","tags":"w4，第四組，40923157","url":"./40923157-2b-w4.html"},{"title":"w4 34","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引. 1.Odoo 參考文章中英並列 教學影片: 連結至 以第六組為例, 利用 Codespaces 維護倉儲內 以第六組為例, 利用 Codespaces 維護倉儲內容 教學影片: 連結至 如何利用 Github Actions 編譯 LaTeX 得到分組 pdf 報告 如何利用 Github Actions 編譯 LaTeX 得到分組 pdf 報告 教學影片: 連結至 如何利用 Gitpod 加上 token 取得分組倉儲權限 如何利用 Gitpod 加上 token 取得分組倉儲權限 2.Replit 靜態網站檢視 下載 main2.txt 與 static.txt , 其中包含 main2.py 與 static.py, 只要在 Shell 執行 python3 main2.py 就可以執行倉儲內的靜態網站檢視. 另一方面, 若要取消先前執行 python3 main2.py, 只需要在 Shell 頁面按下 ctrl + c, c 代表 cancle 也就是取消. 然後若要執行動態網站，可以在 Shell 執行 python3 main.py 或者使用 Replit 的 Run 按鍵. 說明 如何在 Replit 檢視靜態網站 教學影片 說明 如何下載 replit_main2.7z 並在倉儲中建立兩個檔案 教學影片","tags":"w4 34","url":"./2024-cd-2b-w4 34.html"},{"title":"20240314 w4 09","text":"協同產品設計實習的第四週, 各分組需要明確界定任務需求與分工時序, 隨著各組協同設計流程的進行, 分組倉儲與網站的改版越發複雜, 此時若導入 Source Tree 協助各組員更清楚看到倉儲改版架構, 另外 Git Branch 的應用. 第四周 Odoo 參考文章中英並列 教學影片: 連結至 以第六組為例, 利用 Codespaces 維護倉儲內容 以第六組為例, 利用 Codespaces 維護倉儲內容 教學影片: 連結至 如何利用 Github Actions 編譯 LaTeX 得到分組 pdf 報告 如何利用 Github Actions 編譯 LaTeX 得到分組 pdf 報告 教學影片: 連結至 如何利用 Gitpod 加上 token 取得分組倉儲權限 如何利用 Gitpod 加上 token 取得分組倉儲權限","tags":"w4 09","url":"./2024-Spring-w4-blog-tutorial 09.html"},{"title":"w3日誌","text":"何謂LaTeX w3 關於LaTeX 由於不知道何謂LaTeX，因此上網搜尋。 是一種基於TEX的排版系統，由美國電腦科學家萊斯利· 蘭伯特在20世紀80年代初期開發，利用這種格式系統的處理，即使使用者沒有排版和程式設計的知識也可以充分發揮由TEX所提供的強大功能，不必一一親自去設計或校對，能在幾天，甚至幾小時內生成很多具有書籍品質的印刷品生成複雜表格和數學公式，這一點表現得尤為突出。因此它非常適用於生成高印刷品質的科技和數學、物理文件。這個系統同樣適用於生成從簡單的信件到完整書籍的所有其他種類的文件。 P.S. 擷取至 維基百科","tags":"w3","url":"./2024-w3-week-diary.html"},{"title":"40923157協同產品設計實習2b-3","text":"第三周使用Github Codespaces 與 Gitpod, 以及將組員倉儲設為分組倉儲的子模組, 同時導入 LaTeX 轉 pdf 機制, 啟動期中分組報告的製作. 列出期中分組倉儲與網站 cd2024 期中分組倉儲與網站 上列連結使用 Brython 程式語法, 可直接在網頁中列出特定連結內容, 所採用的程式碼如下: 從 Brython browser 模組導入 document 與 html from browser import document, html get output html location brython_div = document[\"brython_div1\"] div = \"a\" org = \"mdecd2024\" midterm = \"mid\" + div + \"g\" group_num = 8 for i in range(1,group_num+1): site_url = \"https://\" + org + \".github.io/2\" + div + \"-\" + midterm + str(i) repo_url = \"https://github.com/\" + org + \"/2\" + div + \"-\" + midterm + str(i) brython_div <= html.A(\"2\"+div+\"-\"+midterm+str(i), href=site_url) brython_div <= \" (\" brython_div <= html.A(\"repo\", href=repo_url) brython_div <= \")\" brython_div <= html.BR() brython_div <= html.BR() div = \"b\" midterm = \"mid\" + div + \"g\" group_num = 9 for i in range(1,group_num+1): site_url = \"https://\" + org + \".github.io/2\" + div + \"-\" + midterm + str(i) repo_url = \"https://github.com/\" + org + \"/2\" + div + \"-\" + midterm + str(i) brython_div <= html.A(\"2\"+div+\"-\"+midterm+str(i), href=site_url) brython_div <= \" (\" brython_div <= html.A(\"repo\", href=repo_url) brython_div <= \")\" brython_div <= html.BR() 期中協同分組報告 請參考 https://github.com/mdecd2024/test-ag1 中的 latex 目錄與 downloads 目錄中的 https://github.com/mdecd2024/test-ag1/blob/main/downloads/report_github.txt 並根據下列教學範例: 說明如何將組員的個人倉儲納入分組倉儲成為子模組 說明如何在 Replit 維護分組倉儲 由各組員在其個人的 cd2024 倉儲中, 以 LaTeX 格式分工完成下列文章的英文與中文翻譯並列資料, 最後在分組網站的 Release 或 downloads 區完成 2b-midbgx_report.pdf 的製作. 若要在近端使用可攜程式環境編譯分組 LaTeX 報告, 請下載 miktex-portable.7z (需要密碼, 下載 167MB, 解開壓縮檔案後約 1GB) 以及參考資料: latex_images_github.7z (需要密碼) 2021 ANALYSIS OF THE ODOO SOFTWARE CAPABILITIES REGARDING PRODUCT LIFECYCLE MANAGEMENT, MANUFACTURING EXECUTION SYSTEMS AND THEIR INTEGRATION.pdf or local download (password required) (Odoo 軟體在產品生命週期管理、製造執行系統及其整合上的功能分析) 英文單字查詢: 2021_odoo_reading.html 有關 Codespaces 使用 由於 Github Codespaces 免費帳號目前每月可以使用 120 core hours, 因此使用者可以選擇在 Github 倉儲中編輯 markdown 目錄中的網誌 .md 文章後, 只在需要利用 pelican 轉檔或啟動編輯 config/content.htm 與轉靜態網頁內容時, 才啟用 Codespaces. 如此可以最佳化使用 Codespaces 的免費 core hours. 使用 Gitpod 維護倉儲與網站 Gitpod 與 Codespaces 類似, 也是採用 Visual Studio Code 網際介面, 可讓使用者維護位於 Github 的倉儲, 只是個人的 cd2024 倉儲, 以 Github 帳號登入 Gitpod 之後, 可以直接維護, 但是分組網站是從 Github Classroom mdecd2024 帳號下派任, 與 Replit 環境維護分組網站的方法相同, 必須自行建立 .ssh 下的 id_rsa 與 config, 差別是一旦在 Gitpod 導入的分組網站 SSH 管理權限, 不會像 Replit 免費帳號下, 系統會定期刪除免費帳號使用者的 .ssh 目錄. 在 Gitpod 導入 Github 倉儲後, 路徑位於 /workspace/ 目錄下, 但是 .ssh 目錄則位於 /home/gitpod/.ssh, 當使用者執行 cd 則會進入 /home/gitpod 目錄, 且使用者在 Gitpod 的 Dashboard 可以從 https://gitpod.io 進入. 電腦教室中的協同設計 cd2024 起, 電腦輔助設計室中的每一台電腦已經各自擁有一個外部 IPv4 網址, 因此各組員可將個人倉儲與分組倉儲 git clone 至隨身碟, 利用 Token 或 SSH session 授權維護倉儲與網站內容. 如何利用 Classic Token 授權維護倉儲與網站 ODOO 參考資料 https://www.google.com/search?q=sap+vs+odoo (與 SAP 及 ODOO 有關的搜尋) 2021 ANALYSIS OF THE ODOO SOFTWARE CAPABILITIES REGARDING PRODUCT LIFECYCLE MANAGEMENT, MANUFACTURING EXECUTION SYSTEMS AND THEIR INTEGRATION.pdf or local download (password required) (Odoo 軟體在產品生命週期管理、製造執行系統及其整合上的功能分析) 英文單字查詢: 2021_odoo_reading.html 將組員的個人倉儲設為分組倉儲子模組 cd2024 課程希望將各分組的組員個人網站, 以 submodule 的方式納入各分組倉儲與網站, 設定的指令為: git submodule add 組員的個人倉儲網址 組員的學號 例如: 假設組員的 cd2024 個人倉儲位於: https://github.com/scrum-1/cd2024, 且該組員的學號為 41123299, 則該組員必須在進入該組的倉儲目錄後, 執行: git submodule add https://github.com/scrum-1/cd2024.git 41123299 如此, Github 帳號為 scrum-1 的組員, 其個人倉儲就會設定為分組倉儲的子模組, 而且是以其學號命名此一子模組的目錄名稱. 這樣設定的好處是: 各組員可以自行管理個人的課程倉儲與網站, 也就是位於其 Github 帳號下的 cd2024, 並且自行決定要整合到分組倉儲與網站的版本. 也能將自己在課程網站的資料, 直接用連結導入分組網站, 無需額外將資料搬進分組倉儲. 另外一個使用 Github Classroom 派送分組倉儲的好處, 是 mdecycu 自動成為各分組倉儲的管理者之一, 若各組在改版或解決衝突的過程發生問題, mdecycu 可以協助處理. 一旦分組倉儲帶有以各組員學號作為子模組之後, git clone 倉儲必須使用: git clone --recurse-submodules 加上各組的倉儲 URL 以第一組期中分組倉儲的 git clone 為例, 並且使用 putty session 名稱 github.com: git clone --recurse-submodules git@github.com:mdecd2024/2b-midbg1.git 而且若要在分組倉儲中更新各組員的子模組版本, 則必須更換目錄到該組員的學號目錄中並且使用 git pull origin main, 才能取下該組員其 cd2024 個人倉儲的最新內容. 取下組員資料後, 若要新增提交推送, 則必須再更換目錄回分組倉儲後才能執行. 有關 LaTeX 轉 pdf 使用 Github Actions 執行轉檔: https://github.com/mdecd2024/test-ag1/blob/main/.github/workflows/main.yml 倉儲中的 latex 目錄: https://github.com/mdecd2024/test-ag1/tree/main/latex 說明如何利用 LaTeX 編寫分組期中報告 利用可攜程式編譯 LaTeX 下載 miktex-portable.7z (需要密碼, 下載 167MB, 解開壓縮檔案後約 1GB) 下載 latex_images_github.7z (需要密碼) 協同產品設計實習分組期中報告 LaTeX 範本: 下載 cd2024_midterm_report_latex_ex.7z 設定網誌 利用 [OBS] 加上廣播系統錄製的: 如何設定個人倉儲中的 Pelican 網誌 Odoo PLM 功能 簡介 Odoo PLM 用法 設定個人網誌系統 利用 https://github.com/mdecycu/cmsimde_site 建立的網站, 其動態網站資料位於 config/content.htm, 轉換完成的靜態網站資料位於 content 目錄中. 網誌的原始檔案位於 markdown 目錄, 所使用的網誌系統為 Pelican, 轉換完成的網誌內容則位於 blog 目錄. 將 markdown 網誌轉為網誌的指令為: pelican markdown -o blog -s local_publishconf.py 表示使用了 local_publishconfig.py 設定, 其餘與 blog 有關的設定檔案還有: pelicanconf.py 與 publishconf.py 等. 為了順利完成上述個人課程網站的網誌設定, 必須根據各用戶所使用的 github 帳號對這三個 .py 檔案進行設定. OnShape 帳號 若網路順暢, 可以登入 https://onshape.com 利用 MKCad Library 或 VEX Part Library 零件程式庫建立產品系統模型. CoppeliaSim CoppeliaSim 4.5.1 rev1 for IPv6.7z (169MB, password required to download) 可以結合可攜程式環境: portable_2024.7z (需要密碼, 下載 540MB, 解開壓縮後約 1.8GB) 進行機電系統設計與模擬. 模型簡化 為了讓機電產品能在 CoppeliaSim 動態場景中順暢模擬, 各零組件必須有效進行簡化, 此一零件簡化過程如何後續對零組件進行應力或其他動態系統分析之前, 必須先簡化零組件外型後再進行網格化的應用相同.","tags":"w3，第四組，40923157","url":"./40923157-w3.html"},{"title":"w3 34","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引. 1.將組員的個人倉儲納為分組倉儲的子模組 cd2024 課程希望將各分組的組員個人網站, 以 submodule 的方式納入各分組倉儲與網站, 設定的指令為: git submodule add 組員的個人倉儲網址 組員的學號 例如: 假設組員的 cd2024 個人倉儲位於: https://github.com/scrum-1/cd2024, 且該組員的學號為 41123299, 則該組員必須在進入該組的倉儲目錄後, 執行: git submodule add https://github.com/scrum-1/cd2024.git 41123299 如此, Github 帳號為 scrum-1 的組員, 其個人倉儲就會設定為分組倉儲的子模組, 而且是以其學號命名此一子模組的目錄名稱. 這樣設定的好處是: 各組員可以自行管理個人的課程倉儲與網站, 也就是位於其 Github 帳號下的 cd2024, 並且自行決定要整合到分組倉儲與網站的版本. 也能將自己在課程網站的資料, 直接用連結導入分組網站, 無需額外將資料搬進分組倉儲. 另外一個使用 Github Classroom 派送分組倉儲的好處, 是 mdecycu 自動成為各分組倉儲的管理者之一, 若各組在改版或解決衝突的過程發生問題, mdecycu 可以協助處理. 一旦分組倉儲帶有以各組員學號作為子模組之後, git clone 倉儲必須使用: git clone --recurse-submodules 加上各組的倉儲 URL 以第一組期中分組倉儲的 git clone 為例, 並且使用 putty session 名稱 github.com: git clone --recurse-submodules git@github.com:mdecd2024/2b-midbg1.git 而且若要在分組倉儲中更新各組員的子模組版本, 則必須更換目錄到該組員的學號目錄中並且使用 git pull origin main, 才能取下該組員其 cd2024 個人倉儲的最新內容. 取下組員資料後, 若要新增提交推送, 則必須再更換目錄回分組倉儲後才能執行. 2.公告期中報告 教學範例: 說明 如何將組員的個人倉儲納入分組倉儲成為子模組 說明 如何在 Replit 維護分組倉儲 由各組員在其個人的 cd2024 倉儲中, 以 LaTeX 格式分工完成下列文章的英文與中文翻譯並列資料, 最後在分組網站的 Release 或 downloads 區完成 2b-midbgx_report.pdf 的製作. 3.使用 Gitpod 維護倉儲與網站 Gitpod 與 Codespaces 類似, 也是採用 Visual Studio Code 網際介面, 可讓使用者維護位於 Github 的倉儲, 只是個人的 cd2024 倉儲, 以 Github 帳號登入 Gitpod 之後, 可以直接維護, 但是分組網站是從 Github Classroom mdecd2024 帳號下派任, 與 Replit 環境維護分組網站的方法相同, 必須自行建立 .ssh 下的 id_rsa 與 config, 差別是一旦在 Gitpod 導入的分組網站 SSH 管理權限, 不會像 Replit 免費帳號下, 系統會定期刪除免費帳號使用者的 .ssh 目錄. 在 Gitpod 導入 Github 倉儲後, 路徑位於 /workspace/ 目錄下, 但是 .ssh 目錄則位於 /home/gitpod/.ssh, 當使用者執行 cd 則會進入 /home/gitpod 目錄, 且使用者在 Gitpod 的 Dashboard 可以從 https://gitpod.io 進入. 說明 使用 Gitpod 維護個人網站 說明 使用 Gitpod 維護分組網站","tags":"w3 34","url":"./2024-cd-2b-w3 34.html"},{"title":"20240307 w3 09","text":"2024 Spring 協同產品設計實習的第三週, 主要說明如何善用 Github Codespaces 與 Gitpod, 以及將組員倉儲設為分組倉儲的子模組, 同時導入 LaTeX 轉 pdf 機制, 啟動期中分組報告的製作. 第三周 連結至 cd2024 期中分組倉儲與網站 點擊以下連結以訪問 cd2024 期中分組倉儲與網站： cd2024 期中分組倉儲與網站","tags":"w3 09","url":"./2024-Spring-w3-blog-tutorial 09.html"},{"title":"協同產品設計實習W3","text":"41123207 王騰甫分工-都靈理工大學C2 page/學習用 Codespaces 維護倉儲與網站/用 Github Classroom 進行分組。 上課內容摘要/相關資料收集 說明如何將組員的個人倉儲納入分組倉儲成為子模組。 說明如何在 Codespaces 維護分組倉儲。 由各組員在其個人的 cd2024 倉儲中, 以 LaTeX 格式分工完成下列文章的英文與中文翻譯並列資料, 最後在分組網站的 Release 或 downloads 區完成 2b-midbgx_report.pdf 的製作。 介紹Odoo PLM 功能。 分組報告執行分工及進度整理 41123207 王騰甫分工-都靈理工大學C2 page/學習用 Codespaces 維護倉儲與網站/用 Github Classroom 進行分組。","tags":"w3","url":"./2024-Spring-w3-blog-tutorial.html"},{"title":"w2日誌","text":"利用 Github Classroom 進行協同分組，並建立分組倉儲 w2分組 利用 Github Classroom 指定分組倉儲 由於各分組網站從 Github Classroom 執行配置, 因此該倉儲位於 mdecd2024 帳號下, 雖然各組組員具備對此分組倉儲改版的權限, 但是若將分組倉儲 import 到 Replit, 因為其倉儲擁有者為 mdecd2024, 因此無法從 Replit accoount 項下進行授權, 但是可以利用 ssh-keygen 建立 .ssh 目錄下的 id_rsa 與 id_rsa.pub, 之後除了將公鑰送到 Github 之外, 還需要在 .ssh 目錄中建立 config, 且將倉儲 .git/config 中的 https 協定改為 SSH. 根據上述流程, 可以在 Replit 中以 SSH 模式取得對 Github 帳號下特定倉儲的改版全縣, 只不過 Replit 的免費帳號環境會不定時刪除 /home/runner/.ssh 目錄中的授權資料, 因此若要使用 Replit 維護從 Github Classroom 取得授權的分組倉儲, 必須使用程式方法配置 .ssh 中的 id_rsa 與 config 檔案. 範例分組倉儲: https://github.com/mdecd2024/test-ag1 利用 Codespaces 維護倉儲與網站 說明如何利用 Github Codespaces 維護網站內容 由於 Github Codespaces 免費帳號目前每月可以使用 120 core hours, 因此使用者可以選擇在 Github 倉儲中編輯 markdown 目錄中的網誌 .md 文章後, 只在需要利用 pelican 轉檔或啟動編輯 config/content.htm 與轉靜態網頁內容時, 才啟用 Codespaces. 如此可以最佳化使用 Codespaces 的免費 core hours. 在近端執行動態網站 說明如何利用近端可攜系統維護分組網站 建立分組倉儲後，發現有少部分人無法帳號連接，切確仍未找出。","tags":"w2","url":"./2024-w2-week-diary.html"},{"title":"40923157協同產品設計實習2b-2","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引. 第二週, 主要利用 Github Classroom 進行分組, 並且說明如何利用 Github Codespaces 維護個人與分組網站. 利用 Github Classroom 指定分組倉儲 由於各分組網站從 Github Classroom 執行配置, 因此該倉儲位於 mdecd2024 帳號下, 雖然各組組員具備對此分組倉儲改版的權限, 但是若將分組倉儲 import 到 Replit, 因為其倉儲擁有者為 mdecd2024, 因此無法從 Replit accoount 項下進行授權, 但是可以利用 ssh-keygen 建立 .ssh 目錄下的 id_rsa 與 id_rsa.pub, 之後除了將公鑰送到 Github 之外, 還需要在 .ssh 目錄中建立 config, 且將倉儲 .git/config 中的 https 協定改為 SSH. 範例分組倉儲: https://github.com/mdecd2024/test-ag1 根據上述規劃, 乙班第一分組的期中協同倉儲將位於: https://github.com/mdecd2024/2b-midbg1, 第一組的期中報告網站將位於: https://mdecd2024.github.io/2b-midbg1. 至於乙班第一分組的期末協同倉儲將位於: https://github.com/mdecd2024/2b2-finalbg1, 且對應的期末報告網站將位於: https://mdecd2024.github.io/2b2-finalbg1. 利用 Codespaces 維護倉儲與網站 說明如何利用 Github Codespaces 維護網站內容","tags":"w2，第四組，40923157","url":"./40923157-w2.html"},{"title":"w2 34","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引. 1.利用 Github Classroom 指定分組倉儲 各分組網站從 Github Classroom 執行配置, 該倉儲位於 mdecd2024 帳號下, 各組組員具備倉儲改版的權限, 但是若將分組倉儲 import 到 Replit, 因為其倉儲擁有者為 mdecd2024, 因此無法從 Replit accoount 項下進行授權, 但是可以利用 ssh-keygen 建立 .ssh 目錄下的 id_rsa 與 id_rsa.pub, 之後除了將公鑰送到 Github 之外, 還需要在 .ssh 目錄中建立 config, 且將倉儲 .git/config 中的 https 協定改為 SSH. 可以在 Replit 中以 SSH 模式取得對 Github 帳號下特定倉儲的改版全縣, 只不過 Replit 的免費帳號環境會不定時刪除 /home/runner/.ssh 目錄中的授權資料, 因此若要使用 Replit 維護從 Github Classroom 取得授權的分組倉儲, 必須使用程式方法配置 .ssh 中的 id_rsa 與 config 檔案. 範例分組倉儲 2.利用 Codespaces 維護倉儲與網站 說明 如何利用 Github Codespaces 維護網站內容 3.設定網誌 利用 [OBS] 加上廣播系統錄製的: 如何設定個人倉儲中的 Pelican 網誌 4.Odoo PLM 功能 簡介 Odoo PLM 用法","tags":"w2 34","url":"./2024-cd-2b-w2 34.html"},{"title":"20240229 w2 09","text":"協同產品設計實習的第二週, 主要利用 Github Classroom 進行協同分組, 除了 Replit, 也可以利用 Github Codespaces 維護個人或分組網站內容. 第二周 利用 Github Classroom 指定分組倉儲 由於各分組網站從 Github Classroom 執行配置, 因此該倉儲位於 mdecd2024 帳號下, 雖然各組組員具備對此分組倉儲改版的權限, 但是若將分組倉儲 import 到 Replit, 因為其倉儲擁有者為 mdecd2024, 因此無法從 Replit accoount 項下進行授權, 但是可以利用 ssh-keygen 建立 .ssh 目錄下的 id_rsa 與 id_rsa.pub, 之後除了將公鑰送到 Github 之外, 還需要在 .ssh 目錄中建立 config, 且將倉儲 .git/config 中的 https 協定改為 SSH. 根據上述流程, 可以在 Replit 中以 SSH 模式取得對 Github 帳號下特定倉儲的改版全縣, 只不過 Replit 的免費帳號環境會不定時刪除 /home/runner/.ssh 目錄中的授權資料, 因此若要使用 Replit 維護從 Github Classroom 取得授權的分組倉儲, 必須使用程式方法配置 .ssh 中的 id_rsa 與 config 檔案. 範例分組倉儲: https://github.com/mdecd2024/test-ag1 利用 Codespaces 維護倉儲與網站 說明如何利用 Github Codespaces 維護網站內容 由於 Github Codespaces 免費帳號目前每月可以使用 120 core hours, 因此使用者可以選擇在 Github 倉儲中編輯 markdown 目錄中的網誌 .md 文章後, 只在需要利用 pelican 轉檔或啟動編輯 config/content.htm 與轉靜態網頁內容時, 才啟用 Codespaces. 如此可以最佳化使用 Codespaces 的免費 core hours. 在近端執行動態網站 說明如何利用近端可攜系統維護分組網站","tags":"w2 09","url":"./2024-Spring-w2-blog-tutorial 09.html"},{"title":"協同產品設計實習W2","text":"以使用連結建立cd2024個人倉儲/在隨身碟下載可攜式套件/將個人github倉儲授權 Replit/設定 Github 帳號的雙重認證。 上課內容摘要/相關資料收集 建個人課程倉儲,利用連結此倉儲作為 Template, 新增一個名稱為 cd2024 的倉儲, 並且將其 main 分支設為網頁根目錄. 並下載可攜套件檔案 個人倉儲 import 至 Replit，從 Replit 帳號下方的 Account, Connected Services(連線服務區) 點選 Connect 後, 讓 Github 授權 Replit, 將在 Replit 中的倉儲改版後, 有權限推回 Github. 設定 Replit 與 Github 應用授權的說明影片 Github 帳號的雙重認證，手機先安裝Authy App 作為認證套件一旦在 Github 帳號下的 Setting 中的 Password and authentication 啟用雙重認證, 最後必須下載對應的 Recovery codes 並存入隨身碟, 而且要寄到個人的電子郵箱. 分組報告執行分工及進度整理 以使用連結建立cd2024個人倉儲/在隨身碟下載可攜式套件/將個人github倉儲授權 Replit/設定 Github 帳號的雙重認證。","tags":"w2","url":"./2024-Spring-w2-blog-tutorial.html"},{"title":"40923157協同產品設計實習2b-1","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引. 第一周，建個人課程倉儲，介紹 OnShape、Coppeliasim 與 Odoo PLM 在機械設計流程中的應用 2b 建個人課程倉儲 登入 github.com, 連結到 (https://github.com/mdecycu/cmsimde_site), 利用此倉儲作為 Template, 新增一個名稱為 cd2024 的倉儲, 並且將其 main 分支設為網頁根目錄. (https://github.com/mdecycu/cmsimde_site) 與 (https://github.com/mdecycu/cmsite) 的差別為, 目前的 Template 將 cmsimde 當作目錄, 而非 cmsite 中的子模組. 上述建立個人課程 cd2024 倉儲與網站的操作影片, 建立的範例網站為: (https://scrum-1.github.io/cd2024/) 將個人倉儲 import 至 Replit 從 Replit 帳號下方的 Account, Connected Services(連線服務區) 點選 Connect 後, 讓 Github 授權 Replit, 將在 Replit 中的倉儲改版後, 有權限推回 Github. 設定 Replit 與 Github 應用授權的說明影片 設定 Github 帳號的雙重認證 說明如何設定 Github 雙重認證, 其中手機必須先安裝 Github Mobile, 也可以使用 Authy App 作為認證套件, 一旦在 Github 帳號下的 Setting 中的 Password and authentication 啟用雙重認證, 最後必須下載對應的 Recovery codes 並存入隨身碟, 而且要寄到個人的電子郵箱. 如何 import 倉儲至 Replit 進行改版 說明如何利用 Replit 對 cd2024 改版","tags":"w1，第四組，40923157","url":"./40923157-w1.html"},{"title":"w1 34","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引. 1.建個人課程倉儲(cd2024) 登入 github.com, 連結到 github.com/mdecycu/cmsimde_site , 利用此倉儲作為 Template, 新增一個名稱為 cd2024 的倉儲, 並且將其 main 分支設為網頁根目錄. github.com/mdecycu/cmsimde_site 與 github.com/mdecycu/cmsite 的差別為, 目前的 Template 將 cmsimde 當作目錄, 而非 cmsite 中的子模組. 上述 建立個人課程 cd2024 倉儲與網站的操作影片 , 建立的範例網站為: scrum-1.github.io/cd2024/ 2.將個人倉儲 import 至 Replit 從 Replit 帳號下方的 Account, Connected Services(連線服務區) 點選 Connect 後, 讓 Github 授權 Replit, 將在 Replit 中的倉儲改版後, 有權限推回 Github. 設定 Replit 與 Github 應用授權的說明影片 在 Replit Editor(編輯器中) 使用 Ctrl + z 執行 undo 在 Replit Editor(編輯器中) 使用 Ctrl + y 執行 redo 3.如何 import 倉儲至 Replit 進行改版 說明如何利用 Replit 對 cd2024 改版 第一周網誌 使用者可以自行利用 cmsimde_site 倉儲作為 Template, 建立自己的網站內容管理系統. 引用網站網址連結的方法: cmsimde_site - 在文章中多次引用同一個網站連結時, 可以使用此種方法. https://github.com/mdecycu/cmsimde_site - 假如想要快速將網址套用 html 網站連結, 可以使用此種方法. cmsimde_site - 也可以使用 Markdown 的標準網站連結使用格式. # 引用 Python 程式的方法 for i in range(10): print(i, \"列出字串\") 也可以直接在 .md 檔案中使用 html 標註, 或加入 Javascript 或 Brython 程式碼. 從 1 累加到 100: 1 add to 100 將 iterable 與 iterator 相關說明 , 利用 Brython 與 Ace Editor 整理在這個頁面. Filename: .py Run Output 清除輸出區 清除繪圖區 Reload 從 1 累加到 100 part2: 1 add to 100 cango_three_gears BSnake AI Tetris Rotating Block Filename: .py Run Output 清除輸出區 清除繪圖區 Reload","tags":"w1 34","url":"./2024-cd-2b-w1 34.html"},{"title":"2024 Spring 課程09","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引. 內容管理系統 使用者可以自行利用 cmsimde_site 倉儲作為 Template, 建立自己的網站內容管理系統. 引用網站網址連結的方法: cmsimde_site - 在文章中多次引用同一個網站連結時, 可以使用此種方法. https://github.com/mdecycu/cmsimde_site - 假如想要快速將網址套用 html 網站連結, 可以使用此種方法. cmsimde_site - 也可以使用 Markdown 的標準網站連結使用格式. # 引用 Python 程式的方法 for i in range(10): print(i, \"列出字串\") 也可以直接在 .md 檔案中使用 html 標註, 或加入 Javascript 或 Brython 程式碼. 從 1 累加到 100: 1 add to 100 將 iterable 與 iterator 相關說明 , 利用 Brython 與 Ace Editor 整理在這個頁面. Filename: .py Run Output 清除輸出區 清除繪圖區 Reload 從 1 累加到 100 part2: 1 add to 100 cango_three_gears BSnake AI Tetris Rotating Block Filename: .py Run Output 清除輸出區 清除繪圖區 Reload","tags":"w1 09","url":"./2024-Spring-w1-blog-tutorial 09.html"},{"title":"協同產品設計實習 2024 Spring 課程","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引. 內容管理系統 使用者可以自行利用 cmsimde_site 倉儲作為 Template, 建立自己的網站內容管理系統. 引用網站網址連結的方法: cmsimde_site - 在文章中多次引用同一個網站連結時, 可以使用此種方法. https://github.com/mdecycu/cmsimde_site - 假如想要快速將網址套用 html 網站連結, 可以使用此種方法. cmsimde_site - 也可以使用 Markdown 的標準網站連結使用格式. # 引用 Python 程式的方法 for i in range(10): print(i, \"列出字串\") 也可以直接在 .md 檔案中使用 html 標註, 或加入 Javascript 或 Brython 程式碼. 從 1 累加到 100: 1 add to 100 將 iterable 與 iterator 相關說明 , 利用 Brython 與 Ace Editor 整理在這個頁面. Filename: .py Run Output 清除輸出區 清除繪圖區 Reload 從 1 累加到 100 part2: 1 add to 100 cango_three_gears BSnake AI Tetris Rotating Block Filename: .py Run Output 清除輸出區 清除繪圖區 Reload","tags":"w1","url":"./2024-Spring-w1-blog-tutorial.html"}]};