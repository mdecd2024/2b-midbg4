var tipuesearch = {"pages":[{"title":"41123215-W11","text":"協同產品設計實習第十一週實習操作, 利用 NX 1872 繪製鋼球平衡台所需的零組件.","tags":"41123215-W11","url":"./2024-41123215-w11-blog-tutorial.html"},{"title":"40923157協同產品設計實習2b-11","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引. 這禮拜上傳心得到 https://github.com/mdecd2024/2bstud-2bsite 裡面","tags":"w11，第四組，40923157","url":"./40923157-2b-w11.html"},{"title":"20240425 w11 09","text":"協同產品設計實習第十一週實習操作, 學習利用 NX 1872 繪製鋼球平衡台所需的零組件. 鋼球平衡台自動控制系統模擬 請根據 Solvespace_model _2d_for_cd2024_w6.7z 零組件尺寸, 利用 Siemens NX1872.7z (需要登入 @nfu.edu.tw, cd2024 採用電腦安裝的 NX1872 或隨身碟中的 NX1872) 執行零組件繪圖, 完成後請將過程影片放入個人與分組網站中. 建立協同 Web-based 機電系統模擬設計必須涉及的議題包括： 如何使用 NX 執行零組件繪圖 - NX 參考資料 如何使用1872版安裝及可攜版 - NX1872 如何啓動及連網認證 - NX1872 了解啓動後用戶設定的存檔位置 - NX1872 認識 NX 的目錄模組架構 - NX 認識 NXOpen Python 程式延伸架構 - NXOpen 了解 Journal 程式設定、建立及執行（internal 及 run_journal.exe 用法） 了解如何針對設計繪圖尺寸單位選擇 - 建立新零件檔案時由 Units 選單選則 mm 或 inches 學習草圖建構、參數選用及長出特徵使用 - NX 參考資料 學習如何完成零件組立 - NX 參考資料 了解零組件轉檔相關知識（如選用零組件座標系統、STL格式及尺寸比例） 了解如何轉入 CoppeliaSim，如何選擇合用的尺寸及比例 了解如何進行場景組件的座標系統轉換 了解開放式機構及封閉式機構的場景如何設置 認識場景存檔的三種格式（binary與XML間的轉換及應用)及應用時機 瞭解如何運用 Web-based 場景模擬串流 學習如何建立場景控制程式（internal Lua、Python、Remoteapi Python、IPv4 Websocket&ZMQ vs IPv6 Websocket&ZMQ) 了解如何協同整理資料、編寫網誌、建立網際簡報及結案報告","tags":"w11 09","url":"./2024-Spring-w11-blog-tutorial 09.html"},{"title":"協同產品設計實習W11","text":"利用 NX 1872 繪製鋼球平衡台所需的零組件.了解如何協同整理資料、編寫網誌、建立網際簡報及結案報告。取得對倉儲的管理權限，學習利用分支完成多人推送時的困難點。 上課內容摘要/相關資料收集 利用 NX 1872 繪製鋼球平衡台所需的零組件.了解如何協同整理資料、編寫網誌、建立網際簡報及結案報告。取得對倉儲的管理權限，學習利用分支完成多人推送時的困難點。 分組報告執行分工及進度整理 正在學習nx的資料。學會利用分支完成多人推送時的困難點。","tags":"w11","url":"./2024-Spring-w11-blog-tutorial.html"},{"title":"41123215-W10","text":"協同產品設計實習第十週實習操作, 透過 ChatGPT、Gemini 1.5 Pro 與 Claude 3 的協助下進行. 建立各班學員的倉儲、網站與分組連結 根據 2b.txt 中的學號、Github 帳號與組別, 設法在各組員與分組網站中, 列出各學員的 cd2024 倉儲、網站, 以及各班各組的期中報告倉儲與網站連結. 鋼球平衡台 PID 控制與模擬 下載 cd2024_ball_balancing_platform_control_ref.7z , 將摘要內容放入個人與分組網誌中","tags":"41123215-W10","url":"./2024-41123215-w10-blog-tutorial.html"},{"title":"40923157協同產品設計實習2b-10","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引. w10 期中考後第一周 鋼球平衡台 PID 控制與模擬摘要內容","tags":"w10，第四組，40923157","url":"./40923157-2b-w10.html"},{"title":"w10 34","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引. 1.w10 鋼球平衡台模擬控制 cd2024_w10.7z 請各組員下載上列鋼球平衡台場景與 ZMQ RemoteAPI Python 控制程式後, 先採單機啟動場景與控制外, 再以跨 IPv6 與 IPv4 網路連線控制後, 將模擬過程影片與實際操作心得放置個人與分組網站與網誌中. 2.鋼球平衡台 PID 控制與模擬 W10 實習的任務二: 請下載 cd2024_ball_balancing_platform_control_ref.7z , 閱讀後請將摘要內容放入個人與分組網誌中.","tags":"w10 34","url":"./2024-cd-2b-w10 34.html"},{"title":"20240425 w10 09","text":"協同產品設計實習的專案實習, 透過 ChatGPT、Gemini 1.5 Pro 與 Claude 3 的協助下進行. 協同資料處理 請各班各組根據 2a_cd2024_midterm.csv , 以及 2b_cd2024_midterm.csv 中的學號、Github 帳號與組別, 設法在各組員與分組網站中, 列出各學員的 cd2024 倉儲、網站, 以及各班各組的期中報告倉儲與網站連結.","tags":"w10 09","url":"./2024-Spring-w10-blog-tutorial 09.html"},{"title":"協同產品設計實習W10","text":"在各組員與分組網站中, 列出各學員的 cd2024 倉儲、網站, 以及各班各組的期中報告倉儲與網站連結./鋼球平衡台 PID 控制與模擬摘要內容 上課內容摘要/相關資料收集 在各組員與分組網站中, 列出各學員的 cd2024 倉儲、網站, 以及各班各組的期中報告倉儲與網站連結./鋼球平衡台 PID 控制與模擬摘要內容 分組報告執行分工及進度整理 在個人網頁上更新鋼球平衡台 PID 控制與模擬摘要內容","tags":"w10","url":"./2024-Spring-w10-blog-tutorial.html"},{"title":"40923157協同產品設計實習2b-9","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引. w9 期中考周","tags":"w9，第四組，40923157","url":"./40923157-2b-w9.html"},{"title":"41123215-W9","text":"協同產品設計實習的第九週, 2b 期中自評、介紹 Google AIStudio 與 Claude.io","tags":"41123215-W9","url":"./2024-41123215-w9-blog-tutorial.html"},{"title":"w9 34","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引. 1.協同資料處理 請各班各組根據 2a_cd2024_midterm.csv , 以及 2b_cd2024_midterm.csv 中的學號、Github 帳號與組別, 設法在各組員與分組網站中, 列出各學員的 cd2024 倉儲、網站, 以及各班各組的期中報告倉儲與網站連結. 過程中, 請詳細說明各組及學員的倉儲與網站中的連結資料如何建立? 手動輸入? 利用程式進行處理? 或者採分工合作方式建立? 2b step1 取出資料放入數列 2.鋼球平衡台 PID 控制與模擬 請下載 cd2024_ball_balancing_platform_control_ref.7z , 閱讀後請將摘要內容放入個人與分組網誌中.","tags":"w9 34","url":"./2024-cd-2b-w9 34.html"},{"title":"協同產品設計實習W9","text":"2b 期中自評、介紹 Google AIStudio 與 Claude.io 上課內容摘要/相關資料收集 2b 期中自評、介紹 Google AIStudio 與 Claude.io 分組報告執行分工及進度整理 2b 期中自評","tags":"w9","url":"./2024-Spring-w9-blog-tutorial.html"},{"title":"41123215-W8","text":"協同產品設計實習的第八週, 將每位組員各一分鐘的影片報告放到各分組網誌, 說明已經完成的個人與團隊分配任務製作結果.","tags":"41123215-W8","url":"./2024-41123215-w8-blog-tutorial.html"},{"title":"41123215-W6","text":"協同產品設計實習的第六週, 說明協同 NX 零組件繪圖以及 CoppeliaSim 場景模擬相關檔案格式.","tags":"41123215-W6","url":"./2024-41123215-w6-blog-tutorial.html"},{"title":"41123215-W5","text":"協同產品設計實習的第五週, 教學內容為先前影片整理、分組網誌的統整與 NX 零組件繪圖.","tags":"41123215-W5","url":"./2024-41123215-w5-blog-tutorial.html"},{"title":"41123215-W4","text":"協同產品設計實習的第四週, 各分組需要明確界定任務需求與分工時序, 隨著各組協同設計流程的進行, 分組倉儲與網站的改版越發複雜, 此時若導入 Source Tree 協助各組員更清楚看到倉儲改版架構, 另外 Git Branch 的應用.","tags":"41123215-W4","url":"./2024-41123215-w4-blog-tutorial.html"},{"title":"41123215-W3","text":"2024 Spring 協同產品設計實習的第三週, 主要說明如何善用 Github Codespaces 與 Gitpod, 以及將組員倉儲設為分組倉儲的子模組, 同時導入 LaTeX 轉 pdf 機制, 啟動期中分組報告的製作.","tags":"41123215-W3","url":"./2024-41123215-w3-blog-tutorial.html"},{"title":"41123215-W2","text":"2024 Spring 協同產品設計實習的第二週, 主要利用 Github Classroom 進行分組, 並且說明如何利用 Github Codespaces 維護個人與分組網站.","tags":"41123215-W2","url":"./2024-41123215-w2-blog-tutorial.html"},{"title":"40923157協同產品設計實習2b-8","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引. 說明在期中之前做了哪些事情的影片介紹","tags":"w8，第四組，40923157","url":"./40923157-2b-w8.html"},{"title":"w8 34","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引. 1.內容管理系統 協同產品設計實習課程使用網際內容管理系統, 採 Github Classroom 建立分組倉儲, 並由學員自行利用 cmsimde_site 作為 Github 倉儲的引擎目錄, 利用 Python 執行網頁編輯. 之後再轉檔為靜態網頁, 以便利用 Github Pages 所提供的 WWW 伺服器呈現協同產品設計過程的相關多媒體內容. 從協同設計的架構上, 個人與分組的倉儲中, 總共設計了以下幾種內容的協同模式: 1.分組網站內容的協同 - 其中包括章節式的網站內容與網誌內容, 可以透過 Python 程式方法整合各學員子模組中的 config/content.htm 以及 markdown/*.md 檔案至分組網站中 2.分組報告內容的協同 - 採用的是 Github Actions 與近端 MikTeX 中的 xelatex 將 .tex 轉為 pdf 的整合過程 3.分組產品設計的 PLM 協同 - 採用的是 Odoo PLM 模組, 讓各分組可以將網站內容、報告內容視為產品, 從協同架構的訂定作為起點, 完成資料展示作為終點, 逐一將過程的協調、派任與執行方法納入 PLM 系統管理 4.分組零組件設計的協同 - 分別採用 Solvespace 作為鋼球平衡台範例, 讓學員使用 Siemens NX 1872 進行協同零組件繪圖設計, 並將各零件的 .prt 檔案納入各學員的倉儲進行組立, 以便找出最佳的設計分工以及零組件轉檔流程 5.分組模擬場景設計的協同 - 當各分組順利完成鋼球平衡台的零組件轉檔後, 一旦進入 CoppeliaSim 場景後, 必須逐一配置感測器 (Sensors)、致動器 (Actuators) 以及 ZMQ RemoteAPI Python 程式, 主要探討如何將此一場景模擬過程在 CoppeliaSim XML 檔案格式與 Siemens NXOpen Python 零件程式檔案間, 找到合用或最佳的協同產品設計模式. 6.分組專案簡報設計的協同 - 在上述各產品設計階段所累積的各種資料, 該如何有效整合到專案完成後必須進行的網際簡報中. 2.分組網站內容的協同 其中首先要求各組員必須每週在 cd2024 倉儲中的 markdown 目錄編寫 markdown 網誌文章, 再經由 Pelican 轉檔至 blog 目錄中的超文件網誌. 由於 Pelican 採用 Python 檔案進行設定, 因此可以在轉檔的過程中, 將各子目錄中的組員倉儲網誌集合到分組倉儲中的 combined_markdown 目錄之後, 再指定將網誌超文件轉至各分組倉儲的 blog 目錄. 由於分組網誌內容協同時, 所有組員所編寫的 markdown 文章必須存入 combined_markdown 目錄, 因此 markdown 網誌文章檔案的命名不可重複, 且各網誌文章的 Slug 字串將會被當作用來命名轉檔後的超文件檔案名稱, 因此也不能重複. 至於當各組員採用 Replit 維護個人倉儲內容時, 可以直接從 Replit Connect 至 Github 取得維護倉儲的權限, 旦卻無法直接用管理分組倉儲, 因為各組員雖然擁有管理分組倉儲的權限, 但是無法在 Replit 中以免費的組員帳號管理 Github Classroom 所取得的分組倉儲. 而必須動態納入針對分組倉儲的 OpenSSH 管理權限.","tags":"w8 34","url":"./2024-cd-2b-w8 34.html"},{"title":"20240411 w7 09","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引. 第七周","tags":"w7 09","url":"./2024-Spring-w7-blog-tutorial 09.html"},{"title":"w7日誌","text":"清明連假 w7 清明連假","tags":"w7","url":"./2024-w7-week-diary.html"},{"title":"40923157協同產品設計實習2b-7","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引. Update main.yml, 加入取下子模組內容的 scripts 觀看老師的影片一部部操做，更新了在分組網站下自己的子模組內容","tags":"w7，第四組，40923157","url":"./40923157-2b-w7.html"},{"title":"w7 34","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引.","tags":"w7 34","url":"./2024-cd-2b-w7 34.html"},{"title":"w6日誌","text":"自行作業分組工作 w6 分組工作 主要聽從組長安排","tags":"w6","url":"./2024-w6-week-diary.html"},{"title":"40923157協同產品設計實習2b-6","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引. w6 加入 LateX 檔案所需目錄 使用小黑窗進行了兩次推送，把miktex-portable拉入虛擬Y槽，而後在rplit進行推送，分別推入了個人網站，再來是小組網站，讓一個團隊能夠點選就能看到LateX 檔案所需目錄的資料進行下載。 @echo off set Disk=y subst %Disk%: \"data\" %Disk%: set HomePath=%Disk%:\\home_ipv6 set HomeDrive=%Disk%:\\home_ipv6 set Home=%Disk%:\\home_ipv6 set USERPROFILE=%Disk%:\\home_ipv6 REM 將系統 Python 程式的 io 設為 utf-8 set PYTHONIOENCODING=\"utf-8\" set PYTHONPATH=%Disk%:\\Python312\\DLLs;%Disk%:\\Python312\\Lib;%Disk%:\\Python312\\Lib\\site-packages; set PYTHONHOME=%Disk%:\\Python312 REM for putty set GIT_SSH=%Disk%:\\putty\\plink.exe REM 設定跟 Python 有關的命令搜尋路徑 set path_python=%Disk%:\\Python312;%Disk%:\\Python312\\Scripts; REM 設定跟Git 有關的命令搜尋路徑 set path_git=%Disk%:\\portablegit\\bin; REM 設定 msys2 64 位元的執行路徑 set path_msys2=%Disk%:\\msys64_20210419\\mingw64\\bin; set path_lua=%Disk%:\\lua-5.3.5\\; set path_cmake=%Disk%:\\cmake-3.21.0-windows-x86_64\\bin; set path_tcc=%Disk%:\\tcc; set path_gnuplot=%Disk%:\\gnuplot\\bin; REM for execute scite directly set path_scite=%Disk%:\\wscite; set path_miktex=%Disk%:\\miktex-portable\\texmfs\\install\\miktex\\bin\\x64; REM for fasm set path_fasm=%Disk%:\\flat_asm; REM Xcopy %Disk%:\\home_ipv6\\AppData\\Roaming\\Coppeliasim C:\\users\\%USERNAME%\\AppData\\Roaming\\Coppeliasim /E /H /C /I /Y path=%Disk%:;%path_python%;%path_msys2%;%path_cmake%;%path_lua%;%path_git%;%path_tcc%;%path_gnuplot%;%path_scite%;%path_miktex%;%path_fasm%;%path%; start /MIN cmd.exe start /MIN cmd.exe start /MIN cmd.exe start /MIN cmd.exe start /MIN %Disk%:\\wscite\\SciTE.exe start /MIN %Disk%:\\wscite\\SciTE.exe REM start %Disk%:\\miktex-portable\\texmfs\\install\\miktex\\bin\\x64\\miktex-console.exe --hide --mkmaps Exit","tags":"w6，第四組，40923157","url":"./40923157-2b-w6.html"},{"title":"w6 34","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引. 1.ODOO PLM 論文中英並列任務 由各組員在其個人的 cd2024 倉儲中, 以 LaTeX 格式分工完成下列文章的英文與中文翻譯並列資料, 最後在分組網站的 Release 或 downloads 區完成 2b-midbgx_report.pdf 的製作. 若要在近端使用可攜程式環境編譯分組 LaTeX 報告, 請下載 miktex-portable.7z (需要密碼, 下載 167MB, 解開壓縮檔案後約 1GB) 以及參考資料: latex_images_github.7z (需要密碼) 2021 ANALYSIS OF THE ODOO SOFTWARE CAPABILITIES REGARDING PRODUCT LIFECYCLE MANAGEMENT, MANUFACTURING EXECUTION SYSTEMS AND THEIR INTEGRATION.pdf or local download (password required) (Odoo 軟體在產品生命週期管理、製造執行系統及其整合上的功能分析) 2.ODOO, NX, Sourcetree, Github and Replit 利用 ODOO PLM, Siemens NX, Sourcetree, Github 分組倉儲與 Replit 打造協同產品開發環境 下載 Siemens NX1872.7z (需要登入 @nfu.edu.tw, cd2024 採用電腦安裝的 NX1872 或隨身碟中的 NX1872) 下載 Sourcetree_portable.7z (需要密碼) 其他工具包括 CoppeliaSim, SciTE, Portablegit, Putty, Zoomit, Python, Solvespace 以及 Process Explorer 等. 配置重點: NX, Sourcetree 與 CoppeliaSim 設定檔案與管理分組倉儲的權限, 必須存至可攜系統, 並分別從可攜系統啟動後的命令列中啟動.","tags":"w6 34","url":"./2024-cd-2b-w6 34.html"},{"title":"20240328 w6 09","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引. 第六周","tags":"w6 09","url":"./2024-Spring-w6-blog-tutorial 09.html"},{"title":"協同產品設計實習W5","text":"將組員的個人倉儲納入分組倉儲成為子模組/在 Replit 維護分組倉儲/善用 Github Codespaces 與 Gitpod 上課內容摘要/相關資料收集 協同產品設計實習的第五週, 教學內容為先前影片整理、分組網誌的統整與 NX 零組件繪圖. 分組報告執行分工及進度整理 在影片上填上字幕/從影片字幕中整理出逐字稿, 放在影片下方, 以 .txt 連結安排/教學影片下方, 以摘要方式說明該影片的教學重點.","tags":"w5","url":"./2024-Spring-w5-blog-tutorial.html"},{"title":"w5日誌","text":"公假未到課 w5 公假 跟學校 藝術中心 前往台中資訊圖書館參加開幕記者會，並擔任開幕司儀，該次展出主題為 前瞻機械主題展 。","tags":"w5","url":"./2024-w5-week-diary.html"},{"title":"40923157協同產品設計實習2b-5","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引. 第五周網誌 教學影片分組整理並自評","tags":"w5，第四組，40923157","url":"./40923157-2b-w5.html"},{"title":"w5 34","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引. 1.如何統整組員子模組中的協同設計網誌 當各組員每週的協同設計網誌文章放在個別的 cd2024 倉儲的 markdown 目錄中, 只要修改分組倉儲中的 pelicalconf.py, 使用 Pelican 設定中的 PATH 與 OUTPUT_PATH 變數, 指定網誌統整目錄, 就可以在分組倉儲中納入所有組員在子模組中所編寫的協同網誌. 實際的設定操作 pelicanconf_py.txt , 是利用 pelicanconf.py 中的程式設定段, 將子模組中 markdown 目錄的 .md 動態複製到分組倉儲中的 combined_directory, 並避開分組倉儲與學員子模組倉儲中的 pages 目錄下的 .md 檔案後, 再進行網誌轉檔, 並且所產生的網誌超文件將存入所設定的 blog 目錄. 完成設定後的網誌轉檔指令為: pelican -s local_publishconf.py 表示要利用 local_publishconf.py 的設定進行轉檔, 且先前有關 pelicanconf.py 的設定也將導入執行. 過程中, 各組員必須將個別的網誌 .md 檔案名稱加上前綴字串, 例如: \"學號_\" 加上獨一無二的網誌 Slug 字串名稱, 且 Category 使用該組員的學號作為標示. 之後各組統整轉檔時, 才不至於發生相同網誌文章檔案名稱衝突的錯誤, 且從各分組網誌的 Categories 中即可找到各組員所編寫的所有網誌內容. 2.利用 NX1872 協同繪製零組件 從電腦輔助設計室中的電腦 C:\\Program Files\\Siemens\\NX1872 取得所需的 NX 套件目錄檔案, 之後將 NX1872 目錄存入隨身碟後, 可利用下列 start_USB_nx1872.bat 啟動. 電腦輔助設計室中 C: 安裝 NX1872, D: 則配置 NX2206 與 NX12, 若在電腦教室則可利用下列批次檔案啟動 NX, 若在各自的電腦或隨身碟帶有各版次的 NX 資料, 只需要透過網路取得授權, 就可直接從 USB 中執行各版次的 NX.","tags":"w5 34","url":"./2024-cd-2b-w5 34.html"},{"title":"20240321 w5 09","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引. 第五周","tags":"w5 09","url":"./2024-Spring-w5-blog-tutorial 09.html"},{"title":"協同產品設計實習W4","text":"將組員的個人倉儲納入分組倉儲成為子模組/在 Replit 維護分組倉儲/善用 Github Codespaces 與 Gitpod 上課內容摘要/相關資料收集 說明如何將組員的個人倉儲納入分組倉儲成為子模組。說明如何在 Replit 維護分組倉儲。Gitpod 與 Codespaces 類似, 也是採用 Visual Studio Code 網際介面, 可讓使用者維護位於 Github 的倉儲，差別是一旦在 Gitpod 導入的分組網站 SSH 管理權限, 不會像 Replit 免費帳號下, 系統會定期刪除免費帳號使用者的 .ssh 目錄。 分組報告執行分工及進度整理 將組員的個人倉儲納入分組倉儲成為子模組/在 Replit 維護分組倉儲/善用 Github Codespaces 與 Gitpod","tags":"w4","url":"./2024-Spring-w4-blog-tutorial.html"},{"title":"w4日誌","text":"試用odoo w4 odoo 已申辦帳號，但還未了解其內容。","tags":"w4","url":"./2024-w4-week-diary.html"},{"title":"40923157協同產品設計實習2b-4","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引. 建立個人最短網址網站 Github Pages服務可以讓 Github 帳號的擁有者, 使用\"帳號.github.io\"作為倉儲名稱, Github 會自動將此網站設定 Github Pages, 假如此倉儲內部帶有超文件, 則此倉儲對應的網址將會是 https://帳號.github.io 說明如何下載 replit_main2.7z 並在倉儲中建立 下載【replit】(https://mde.tw/wcm2024/downloads/static.txt) (https://mde.tw/wcm2024/downloads/main2.txt) 其中包含main2.py與ststic.py，只要在shll執行python3 main2.py就可以執行倉儲內的靜態網站顯示，另一方面諾要取消先前的python3 main2.py，只需要在shll頁面按下shift + c c代表cancle也就是取消，諾要執行動態網站，可以在shll執行python3 main.py，或者使用replit的Run按健 內容管理系統 使用者可以自行利用 cmsimde_site 倉儲作為 Template, 建立自己的網站內容管理系統. 引用網站網址連結的方法: cmsimde_site - 在文章中多次引用同一個網站連結時, 可以使用此種方法. https://github.com/mdecycu/cmsimde_site - 假如想要快速將網址套用 html 網站連結, 可以使用此種方法. cmsimde_site - 也可以使用 Markdown 的標準網站連結使用格式. ## 引用 Python 程式的方法 for i in range(10): print(i, \"列出字串\") 也可以直接在 .md 檔案中使用 html 標註, 或加入 Javascript 或 Brython 程式碼. 從 1 累加到 100: 1 add to 100 將 iterable 與 iterator 相關說明 , 利用 Brython 與 Ace Editor 整理在這個頁面. Filename: .py Run Output 清除輸出區 清除繪圖區 Reload 從 1 累加到 100 part2: 1 add to 100 cango_three_gears BSnake AI Tetris Rotating Block Filename: .py Run Output 清除輸出區 清除繪圖區 Reload","tags":"w4，第四組，40923157","url":"./40923157-2b-w4.html"},{"title":"w4 34","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引. 1.Odoo 參考文章中英並列 教學影片: 連結至 以第六組為例, 利用 Codespaces 維護倉儲內 以第六組為例, 利用 Codespaces 維護倉儲內容 教學影片: 連結至 如何利用 Github Actions 編譯 LaTeX 得到分組 pdf 報告 如何利用 Github Actions 編譯 LaTeX 得到分組 pdf 報告 教學影片: 連結至 如何利用 Gitpod 加上 token 取得分組倉儲權限 如何利用 Gitpod 加上 token 取得分組倉儲權限 2.Replit 靜態網站檢視 下載 main2.txt 與 static.txt , 其中包含 main2.py 與 static.py, 只要在 Shell 執行 python3 main2.py 就可以執行倉儲內的靜態網站檢視. 另一方面, 若要取消先前執行 python3 main2.py, 只需要在 Shell 頁面按下 ctrl + c, c 代表 cancle 也就是取消. 然後若要執行動態網站，可以在 Shell 執行 python3 main.py 或者使用 Replit 的 Run 按鍵. 說明 如何在 Replit 檢視靜態網站 教學影片 說明 如何下載 replit_main2.7z 並在倉儲中建立兩個檔案 教學影片","tags":"w4 34","url":"./2024-cd-2b-w4 34.html"},{"title":"20240314 w4 09","text":"協同產品設計實習的第四週, 各分組需要明確界定任務需求與分工時序, 隨著各組協同設計流程的進行, 分組倉儲與網站的改版越發複雜, 此時若導入 Source Tree 協助各組員更清楚看到倉儲改版架構, 另外 Git Branch 的應用. 第四周 Odoo 參考文章中英並列 教學影片: 連結至 以第六組為例, 利用 Codespaces 維護倉儲內容 以第六組為例, 利用 Codespaces 維護倉儲內容 教學影片: 連結至 如何利用 Github Actions 編譯 LaTeX 得到分組 pdf 報告 如何利用 Github Actions 編譯 LaTeX 得到分組 pdf 報告 教學影片: 連結至 如何利用 Gitpod 加上 token 取得分組倉儲權限 如何利用 Gitpod 加上 token 取得分組倉儲權限","tags":"w4 09","url":"./2024-Spring-w4-blog-tutorial 09.html"},{"title":"w3日誌","text":"何謂LaTeX w3 關於LaTeX 由於不知道何謂LaTeX，因此上網搜尋。 是一種基於TEX的排版系統，由美國電腦科學家萊斯利· 蘭伯特在20世紀80年代初期開發，利用這種格式系統的處理，即使使用者沒有排版和程式設計的知識也可以充分發揮由TEX所提供的強大功能，不必一一親自去設計或校對，能在幾天，甚至幾小時內生成很多具有書籍品質的印刷品生成複雜表格和數學公式，這一點表現得尤為突出。因此它非常適用於生成高印刷品質的科技和數學、物理文件。這個系統同樣適用於生成從簡單的信件到完整書籍的所有其他種類的文件。 P.S. 擷取至 維基百科","tags":"w3","url":"./2024-w8-week-diary.html"},{"title":"40923157協同產品設計實習2b-3","text":"第三周使用Github Codespaces 與 Gitpod, 以及將組員倉儲設為分組倉儲的子模組, 同時導入 LaTeX 轉 pdf 機制, 啟動期中分組報告的製作. 列出期中分組倉儲與網站 cd2024 期中分組倉儲與網站 上列連結使用 Brython 程式語法, 可直接在網頁中列出特定連結內容, 所採用的程式碼如下: 從 Brython browser 模組導入 document 與 html from browser import document, html get output html location brython_div = document[\"brython_div1\"] div = \"a\" org = \"mdecd2024\" midterm = \"mid\" + div + \"g\" group_num = 8 for i in range(1,group_num+1): site_url = \"https://\" + org + \".github.io/2\" + div + \"-\" + midterm + str(i) repo_url = \"https://github.com/\" + org + \"/2\" + div + \"-\" + midterm + str(i) brython_div <= html.A(\"2\"+div+\"-\"+midterm+str(i), href=site_url) brython_div <= \" (\" brython_div <= html.A(\"repo\", href=repo_url) brython_div <= \")\" brython_div <= html.BR() brython_div <= html.BR() div = \"b\" midterm = \"mid\" + div + \"g\" group_num = 9 for i in range(1,group_num+1): site_url = \"https://\" + org + \".github.io/2\" + div + \"-\" + midterm + str(i) repo_url = \"https://github.com/\" + org + \"/2\" + div + \"-\" + midterm + str(i) brython_div <= html.A(\"2\"+div+\"-\"+midterm+str(i), href=site_url) brython_div <= \" (\" brython_div <= html.A(\"repo\", href=repo_url) brython_div <= \")\" brython_div <= html.BR() 期中協同分組報告 請參考 https://github.com/mdecd2024/test-ag1 中的 latex 目錄與 downloads 目錄中的 https://github.com/mdecd2024/test-ag1/blob/main/downloads/report_github.txt 並根據下列教學範例: 說明如何將組員的個人倉儲納入分組倉儲成為子模組 說明如何在 Replit 維護分組倉儲 由各組員在其個人的 cd2024 倉儲中, 以 LaTeX 格式分工完成下列文章的英文與中文翻譯並列資料, 最後在分組網站的 Release 或 downloads 區完成 2b-midbgx_report.pdf 的製作. 若要在近端使用可攜程式環境編譯分組 LaTeX 報告, 請下載 miktex-portable.7z (需要密碼, 下載 167MB, 解開壓縮檔案後約 1GB) 以及參考資料: latex_images_github.7z (需要密碼) 2021 ANALYSIS OF THE ODOO SOFTWARE CAPABILITIES REGARDING PRODUCT LIFECYCLE MANAGEMENT, MANUFACTURING EXECUTION SYSTEMS AND THEIR INTEGRATION.pdf or local download (password required) (Odoo 軟體在產品生命週期管理、製造執行系統及其整合上的功能分析) 英文單字查詢: 2021_odoo_reading.html 有關 Codespaces 使用 由於 Github Codespaces 免費帳號目前每月可以使用 120 core hours, 因此使用者可以選擇在 Github 倉儲中編輯 markdown 目錄中的網誌 .md 文章後, 只在需要利用 pelican 轉檔或啟動編輯 config/content.htm 與轉靜態網頁內容時, 才啟用 Codespaces. 如此可以最佳化使用 Codespaces 的免費 core hours. 使用 Gitpod 維護倉儲與網站 Gitpod 與 Codespaces 類似, 也是採用 Visual Studio Code 網際介面, 可讓使用者維護位於 Github 的倉儲, 只是個人的 cd2024 倉儲, 以 Github 帳號登入 Gitpod 之後, 可以直接維護, 但是分組網站是從 Github Classroom mdecd2024 帳號下派任, 與 Replit 環境維護分組網站的方法相同, 必須自行建立 .ssh 下的 id_rsa 與 config, 差別是一旦在 Gitpod 導入的分組網站 SSH 管理權限, 不會像 Replit 免費帳號下, 系統會定期刪除免費帳號使用者的 .ssh 目錄. 在 Gitpod 導入 Github 倉儲後, 路徑位於 /workspace/ 目錄下, 但是 .ssh 目錄則位於 /home/gitpod/.ssh, 當使用者執行 cd 則會進入 /home/gitpod 目錄, 且使用者在 Gitpod 的 Dashboard 可以從 https://gitpod.io 進入. 電腦教室中的協同設計 cd2024 起, 電腦輔助設計室中的每一台電腦已經各自擁有一個外部 IPv4 網址, 因此各組員可將個人倉儲與分組倉儲 git clone 至隨身碟, 利用 Token 或 SSH session 授權維護倉儲與網站內容. 如何利用 Classic Token 授權維護倉儲與網站 ODOO 參考資料 https://www.google.com/search?q=sap+vs+odoo (與 SAP 及 ODOO 有關的搜尋) 2021 ANALYSIS OF THE ODOO SOFTWARE CAPABILITIES REGARDING PRODUCT LIFECYCLE MANAGEMENT, MANUFACTURING EXECUTION SYSTEMS AND THEIR INTEGRATION.pdf or local download (password required) (Odoo 軟體在產品生命週期管理、製造執行系統及其整合上的功能分析) 英文單字查詢: 2021_odoo_reading.html 將組員的個人倉儲設為分組倉儲子模組 cd2024 課程希望將各分組的組員個人網站, 以 submodule 的方式納入各分組倉儲與網站, 設定的指令為: git submodule add 組員的個人倉儲網址 組員的學號 例如: 假設組員的 cd2024 個人倉儲位於: https://github.com/scrum-1/cd2024, 且該組員的學號為 41123299, 則該組員必須在進入該組的倉儲目錄後, 執行: git submodule add https://github.com/scrum-1/cd2024.git 41123299 如此, Github 帳號為 scrum-1 的組員, 其個人倉儲就會設定為分組倉儲的子模組, 而且是以其學號命名此一子模組的目錄名稱. 這樣設定的好處是: 各組員可以自行管理個人的課程倉儲與網站, 也就是位於其 Github 帳號下的 cd2024, 並且自行決定要整合到分組倉儲與網站的版本. 也能將自己在課程網站的資料, 直接用連結導入分組網站, 無需額外將資料搬進分組倉儲. 另外一個使用 Github Classroom 派送分組倉儲的好處, 是 mdecycu 自動成為各分組倉儲的管理者之一, 若各組在改版或解決衝突的過程發生問題, mdecycu 可以協助處理. 一旦分組倉儲帶有以各組員學號作為子模組之後, git clone 倉儲必須使用: git clone --recurse-submodules 加上各組的倉儲 URL 以第一組期中分組倉儲的 git clone 為例, 並且使用 putty session 名稱 github.com: git clone --recurse-submodules git@github.com:mdecd2024/2b-midbg1.git 而且若要在分組倉儲中更新各組員的子模組版本, 則必須更換目錄到該組員的學號目錄中並且使用 git pull origin main, 才能取下該組員其 cd2024 個人倉儲的最新內容. 取下組員資料後, 若要新增提交推送, 則必須再更換目錄回分組倉儲後才能執行. 有關 LaTeX 轉 pdf 使用 Github Actions 執行轉檔: https://github.com/mdecd2024/test-ag1/blob/main/.github/workflows/main.yml 倉儲中的 latex 目錄: https://github.com/mdecd2024/test-ag1/tree/main/latex 說明如何利用 LaTeX 編寫分組期中報告 利用可攜程式編譯 LaTeX 下載 miktex-portable.7z (需要密碼, 下載 167MB, 解開壓縮檔案後約 1GB) 下載 latex_images_github.7z (需要密碼) 協同產品設計實習分組期中報告 LaTeX 範本: 下載 cd2024_midterm_report_latex_ex.7z 設定網誌 利用 [OBS] 加上廣播系統錄製的: 如何設定個人倉儲中的 Pelican 網誌 Odoo PLM 功能 簡介 Odoo PLM 用法 設定個人網誌系統 利用 https://github.com/mdecycu/cmsimde_site 建立的網站, 其動態網站資料位於 config/content.htm, 轉換完成的靜態網站資料位於 content 目錄中. 網誌的原始檔案位於 markdown 目錄, 所使用的網誌系統為 Pelican, 轉換完成的網誌內容則位於 blog 目錄. 將 markdown 網誌轉為網誌的指令為: pelican markdown -o blog -s local_publishconf.py 表示使用了 local_publishconfig.py 設定, 其餘與 blog 有關的設定檔案還有: pelicanconf.py 與 publishconf.py 等. 為了順利完成上述個人課程網站的網誌設定, 必須根據各用戶所使用的 github 帳號對這三個 .py 檔案進行設定. OnShape 帳號 若網路順暢, 可以登入 https://onshape.com 利用 MKCad Library 或 VEX Part Library 零件程式庫建立產品系統模型. CoppeliaSim CoppeliaSim 4.5.1 rev1 for IPv6.7z (169MB, password required to download) 可以結合可攜程式環境: portable_2024.7z (需要密碼, 下載 540MB, 解開壓縮後約 1.8GB) 進行機電系統設計與模擬. 模型簡化 為了讓機電產品能在 CoppeliaSim 動態場景中順暢模擬, 各零組件必須有效進行簡化, 此一零件簡化過程如何後續對零組件進行應力或其他動態系統分析之前, 必須先簡化零組件外型後再進行網格化的應用相同.","tags":"w3，第四組，40923157","url":"./40923157-w3.html"},{"title":"w3 34","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引. 1.將組員的個人倉儲納為分組倉儲的子模組 cd2024 課程希望將各分組的組員個人網站, 以 submodule 的方式納入各分組倉儲與網站, 設定的指令為: git submodule add 組員的個人倉儲網址 組員的學號 例如: 假設組員的 cd2024 個人倉儲位於: https://github.com/scrum-1/cd2024, 且該組員的學號為 41123299, 則該組員必須在進入該組的倉儲目錄後, 執行: git submodule add https://github.com/scrum-1/cd2024.git 41123299 如此, Github 帳號為 scrum-1 的組員, 其個人倉儲就會設定為分組倉儲的子模組, 而且是以其學號命名此一子模組的目錄名稱. 這樣設定的好處是: 各組員可以自行管理個人的課程倉儲與網站, 也就是位於其 Github 帳號下的 cd2024, 並且自行決定要整合到分組倉儲與網站的版本. 也能將自己在課程網站的資料, 直接用連結導入分組網站, 無需額外將資料搬進分組倉儲. 另外一個使用 Github Classroom 派送分組倉儲的好處, 是 mdecycu 自動成為各分組倉儲的管理者之一, 若各組在改版或解決衝突的過程發生問題, mdecycu 可以協助處理. 一旦分組倉儲帶有以各組員學號作為子模組之後, git clone 倉儲必須使用: git clone --recurse-submodules 加上各組的倉儲 URL 以第一組期中分組倉儲的 git clone 為例, 並且使用 putty session 名稱 github.com: git clone --recurse-submodules git@github.com:mdecd2024/2b-midbg1.git 而且若要在分組倉儲中更新各組員的子模組版本, 則必須更換目錄到該組員的學號目錄中並且使用 git pull origin main, 才能取下該組員其 cd2024 個人倉儲的最新內容. 取下組員資料後, 若要新增提交推送, 則必須再更換目錄回分組倉儲後才能執行. 2.公告期中報告 教學範例: 說明 如何將組員的個人倉儲納入分組倉儲成為子模組 說明 如何在 Replit 維護分組倉儲 由各組員在其個人的 cd2024 倉儲中, 以 LaTeX 格式分工完成下列文章的英文與中文翻譯並列資料, 最後在分組網站的 Release 或 downloads 區完成 2b-midbgx_report.pdf 的製作. 3.使用 Gitpod 維護倉儲與網站 Gitpod 與 Codespaces 類似, 也是採用 Visual Studio Code 網際介面, 可讓使用者維護位於 Github 的倉儲, 只是個人的 cd2024 倉儲, 以 Github 帳號登入 Gitpod 之後, 可以直接維護, 但是分組網站是從 Github Classroom mdecd2024 帳號下派任, 與 Replit 環境維護分組網站的方法相同, 必須自行建立 .ssh 下的 id_rsa 與 config, 差別是一旦在 Gitpod 導入的分組網站 SSH 管理權限, 不會像 Replit 免費帳號下, 系統會定期刪除免費帳號使用者的 .ssh 目錄. 在 Gitpod 導入 Github 倉儲後, 路徑位於 /workspace/ 目錄下, 但是 .ssh 目錄則位於 /home/gitpod/.ssh, 當使用者執行 cd 則會進入 /home/gitpod 目錄, 且使用者在 Gitpod 的 Dashboard 可以從 https://gitpod.io 進入. 說明 使用 Gitpod 維護個人網站 說明 使用 Gitpod 維護分組網站","tags":"w3 34","url":"./2024-cd-2b-w3 34.html"},{"title":"20240307 w3 09","text":"2024 Spring 協同產品設計實習的第三週, 主要說明如何善用 Github Codespaces 與 Gitpod, 以及將組員倉儲設為分組倉儲的子模組, 同時導入 LaTeX 轉 pdf 機制, 啟動期中分組報告的製作. 第三周 連結至 cd2024 期中分組倉儲與網站 點擊以下連結以訪問 cd2024 期中分組倉儲與網站： cd2024 期中分組倉儲與網站","tags":"w3 09","url":"./2024-Spring-w3-blog-tutorial 09.html"},{"title":"協同產品設計實習W3","text":"41123207 王騰甫分工-都靈理工大學C2 page/學習用 Codespaces 維護倉儲與網站/用 Github Classroom 進行分組。 上課內容摘要/相關資料收集 說明如何將組員的個人倉儲納入分組倉儲成為子模組。 說明如何在 Codespaces 維護分組倉儲。 由各組員在其個人的 cd2024 倉儲中, 以 LaTeX 格式分工完成下列文章的英文與中文翻譯並列資料, 最後在分組網站的 Release 或 downloads 區完成 2b-midbgx_report.pdf 的製作。 介紹Odoo PLM 功能。 分組報告執行分工及進度整理 41123207 王騰甫分工-都靈理工大學C2 page/學習用 Codespaces 維護倉儲與網站/用 Github Classroom 進行分組。","tags":"w3","url":"./2024-Spring-w3-blog-tutorial.html"},{"title":"w2日誌","text":"利用 Github Classroom 進行協同分組，並建立分組倉儲 w2分組 利用 Github Classroom 指定分組倉儲 由於各分組網站從 Github Classroom 執行配置, 因此該倉儲位於 mdecd2024 帳號下, 雖然各組組員具備對此分組倉儲改版的權限, 但是若將分組倉儲 import 到 Replit, 因為其倉儲擁有者為 mdecd2024, 因此無法從 Replit accoount 項下進行授權, 但是可以利用 ssh-keygen 建立 .ssh 目錄下的 id_rsa 與 id_rsa.pub, 之後除了將公鑰送到 Github 之外, 還需要在 .ssh 目錄中建立 config, 且將倉儲 .git/config 中的 https 協定改為 SSH. 根據上述流程, 可以在 Replit 中以 SSH 模式取得對 Github 帳號下特定倉儲的改版全縣, 只不過 Replit 的免費帳號環境會不定時刪除 /home/runner/.ssh 目錄中的授權資料, 因此若要使用 Replit 維護從 Github Classroom 取得授權的分組倉儲, 必須使用程式方法配置 .ssh 中的 id_rsa 與 config 檔案. 範例分組倉儲: https://github.com/mdecd2024/test-ag1 利用 Codespaces 維護倉儲與網站 說明如何利用 Github Codespaces 維護網站內容 由於 Github Codespaces 免費帳號目前每月可以使用 120 core hours, 因此使用者可以選擇在 Github 倉儲中編輯 markdown 目錄中的網誌 .md 文章後, 只在需要利用 pelican 轉檔或啟動編輯 config/content.htm 與轉靜態網頁內容時, 才啟用 Codespaces. 如此可以最佳化使用 Codespaces 的免費 core hours. 在近端執行動態網站 說明如何利用近端可攜系統維護分組網站 建立分組倉儲後，發現有少部分人無法帳號連接，切確仍未找出。","tags":"w2","url":"./2024-w2-week-diary.html"},{"title":"40923157協同產品設計實習2b-2","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引. 第二週, 主要利用 Github Classroom 進行分組, 並且說明如何利用 Github Codespaces 維護個人與分組網站. 利用 Github Classroom 指定分組倉儲 由於各分組網站從 Github Classroom 執行配置, 因此該倉儲位於 mdecd2024 帳號下, 雖然各組組員具備對此分組倉儲改版的權限, 但是若將分組倉儲 import 到 Replit, 因為其倉儲擁有者為 mdecd2024, 因此無法從 Replit accoount 項下進行授權, 但是可以利用 ssh-keygen 建立 .ssh 目錄下的 id_rsa 與 id_rsa.pub, 之後除了將公鑰送到 Github 之外, 還需要在 .ssh 目錄中建立 config, 且將倉儲 .git/config 中的 https 協定改為 SSH. 範例分組倉儲: https://github.com/mdecd2024/test-ag1 根據上述規劃, 乙班第一分組的期中協同倉儲將位於: https://github.com/mdecd2024/2b-midbg1, 第一組的期中報告網站將位於: https://mdecd2024.github.io/2b-midbg1. 至於乙班第一分組的期末協同倉儲將位於: https://github.com/mdecd2024/2b2-finalbg1, 且對應的期末報告網站將位於: https://mdecd2024.github.io/2b2-finalbg1. 利用 Codespaces 維護倉儲與網站 說明如何利用 Github Codespaces 維護網站內容","tags":"w2，第四組，40923157","url":"./40923157-w2.html"},{"title":"w2 34","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引. 1.利用 Github Classroom 指定分組倉儲 各分組網站從 Github Classroom 執行配置, 該倉儲位於 mdecd2024 帳號下, 各組組員具備倉儲改版的權限, 但是若將分組倉儲 import 到 Replit, 因為其倉儲擁有者為 mdecd2024, 因此無法從 Replit accoount 項下進行授權, 但是可以利用 ssh-keygen 建立 .ssh 目錄下的 id_rsa 與 id_rsa.pub, 之後除了將公鑰送到 Github 之外, 還需要在 .ssh 目錄中建立 config, 且將倉儲 .git/config 中的 https 協定改為 SSH. 可以在 Replit 中以 SSH 模式取得對 Github 帳號下特定倉儲的改版全縣, 只不過 Replit 的免費帳號環境會不定時刪除 /home/runner/.ssh 目錄中的授權資料, 因此若要使用 Replit 維護從 Github Classroom 取得授權的分組倉儲, 必須使用程式方法配置 .ssh 中的 id_rsa 與 config 檔案. 範例分組倉儲 2.利用 Codespaces 維護倉儲與網站 說明 如何利用 Github Codespaces 維護網站內容 3.設定網誌 利用 [OBS] 加上廣播系統錄製的: 如何設定個人倉儲中的 Pelican 網誌 4.Odoo PLM 功能 簡介 Odoo PLM 用法","tags":"w2 34","url":"./2024-cd-2b-w2 34.html"},{"title":"20240229 w2 09","text":"協同產品設計實習的第二週, 主要利用 Github Classroom 進行協同分組, 除了 Replit, 也可以利用 Github Codespaces 維護個人或分組網站內容. 第二周 利用 Github Classroom 指定分組倉儲 由於各分組網站從 Github Classroom 執行配置, 因此該倉儲位於 mdecd2024 帳號下, 雖然各組組員具備對此分組倉儲改版的權限, 但是若將分組倉儲 import 到 Replit, 因為其倉儲擁有者為 mdecd2024, 因此無法從 Replit accoount 項下進行授權, 但是可以利用 ssh-keygen 建立 .ssh 目錄下的 id_rsa 與 id_rsa.pub, 之後除了將公鑰送到 Github 之外, 還需要在 .ssh 目錄中建立 config, 且將倉儲 .git/config 中的 https 協定改為 SSH. 根據上述流程, 可以在 Replit 中以 SSH 模式取得對 Github 帳號下特定倉儲的改版全縣, 只不過 Replit 的免費帳號環境會不定時刪除 /home/runner/.ssh 目錄中的授權資料, 因此若要使用 Replit 維護從 Github Classroom 取得授權的分組倉儲, 必須使用程式方法配置 .ssh 中的 id_rsa 與 config 檔案. 範例分組倉儲: https://github.com/mdecd2024/test-ag1 利用 Codespaces 維護倉儲與網站 說明如何利用 Github Codespaces 維護網站內容 由於 Github Codespaces 免費帳號目前每月可以使用 120 core hours, 因此使用者可以選擇在 Github 倉儲中編輯 markdown 目錄中的網誌 .md 文章後, 只在需要利用 pelican 轉檔或啟動編輯 config/content.htm 與轉靜態網頁內容時, 才啟用 Codespaces. 如此可以最佳化使用 Codespaces 的免費 core hours. 在近端執行動態網站 說明如何利用近端可攜系統維護分組網站","tags":"w2 09","url":"./2024-Spring-w2-blog-tutorial 09.html"},{"title":"協同產品設計實習W2","text":"以使用連結建立cd2024個人倉儲/在隨身碟下載可攜式套件/將個人github倉儲授權 Replit/設定 Github 帳號的雙重認證。 上課內容摘要/相關資料收集 建個人課程倉儲,利用連結此倉儲作為 Template, 新增一個名稱為 cd2024 的倉儲, 並且將其 main 分支設為網頁根目錄. 並下載可攜套件檔案 個人倉儲 import 至 Replit，從 Replit 帳號下方的 Account, Connected Services(連線服務區) 點選 Connect 後, 讓 Github 授權 Replit, 將在 Replit 中的倉儲改版後, 有權限推回 Github. 設定 Replit 與 Github 應用授權的說明影片 Github 帳號的雙重認證，手機先安裝Authy App 作為認證套件一旦在 Github 帳號下的 Setting 中的 Password and authentication 啟用雙重認證, 最後必須下載對應的 Recovery codes 並存入隨身碟, 而且要寄到個人的電子郵箱. 分組報告執行分工及進度整理 以使用連結建立cd2024個人倉儲/在隨身碟下載可攜式套件/將個人github倉儲授權 Replit/設定 Github 帳號的雙重認證。","tags":"w2","url":"./2024-Spring-w2-blog-tutorial.html"},{"title":"40923157協同產品設計實習2b-1","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引. 第一周，建個人課程倉儲，介紹 OnShape、Coppeliasim 與 Odoo PLM 在機械設計流程中的應用 2b 建個人課程倉儲 登入 github.com, 連結到 (https://github.com/mdecycu/cmsimde_site), 利用此倉儲作為 Template, 新增一個名稱為 cd2024 的倉儲, 並且將其 main 分支設為網頁根目錄. (https://github.com/mdecycu/cmsimde_site) 與 (https://github.com/mdecycu/cmsite) 的差別為, 目前的 Template 將 cmsimde 當作目錄, 而非 cmsite 中的子模組. 上述建立個人課程 cd2024 倉儲與網站的操作影片, 建立的範例網站為: (https://scrum-1.github.io/cd2024/) 將個人倉儲 import 至 Replit 從 Replit 帳號下方的 Account, Connected Services(連線服務區) 點選 Connect 後, 讓 Github 授權 Replit, 將在 Replit 中的倉儲改版後, 有權限推回 Github. 設定 Replit 與 Github 應用授權的說明影片 設定 Github 帳號的雙重認證 說明如何設定 Github 雙重認證, 其中手機必須先安裝 Github Mobile, 也可以使用 Authy App 作為認證套件, 一旦在 Github 帳號下的 Setting 中的 Password and authentication 啟用雙重認證, 最後必須下載對應的 Recovery codes 並存入隨身碟, 而且要寄到個人的電子郵箱. 如何 import 倉儲至 Replit 進行改版 說明如何利用 Replit 對 cd2024 改版","tags":"w1，第四組，40923157","url":"./40923157-w1.html"},{"title":"w1 34","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引. 1.建個人課程倉儲(cd2024) 登入 github.com, 連結到 github.com/mdecycu/cmsimde_site , 利用此倉儲作為 Template, 新增一個名稱為 cd2024 的倉儲, 並且將其 main 分支設為網頁根目錄. github.com/mdecycu/cmsimde_site 與 github.com/mdecycu/cmsite 的差別為, 目前的 Template 將 cmsimde 當作目錄, 而非 cmsite 中的子模組. 上述 建立個人課程 cd2024 倉儲與網站的操作影片 , 建立的範例網站為: scrum-1.github.io/cd2024/ 2.將個人倉儲 import 至 Replit 從 Replit 帳號下方的 Account, Connected Services(連線服務區) 點選 Connect 後, 讓 Github 授權 Replit, 將在 Replit 中的倉儲改版後, 有權限推回 Github. 設定 Replit 與 Github 應用授權的說明影片 在 Replit Editor(編輯器中) 使用 Ctrl + z 執行 undo 在 Replit Editor(編輯器中) 使用 Ctrl + y 執行 redo 3.如何 import 倉儲至 Replit 進行改版 說明如何利用 Replit 對 cd2024 改版 第一周網誌 使用者可以自行利用 cmsimde_site 倉儲作為 Template, 建立自己的網站內容管理系統. 引用網站網址連結的方法: cmsimde_site - 在文章中多次引用同一個網站連結時, 可以使用此種方法. https://github.com/mdecycu/cmsimde_site - 假如想要快速將網址套用 html 網站連結, 可以使用此種方法. cmsimde_site - 也可以使用 Markdown 的標準網站連結使用格式. # 引用 Python 程式的方法 for i in range(10): print(i, \"列出字串\") 也可以直接在 .md 檔案中使用 html 標註, 或加入 Javascript 或 Brython 程式碼. 從 1 累加到 100: 1 add to 100 將 iterable 與 iterator 相關說明 , 利用 Brython 與 Ace Editor 整理在這個頁面. Filename: .py Run Output 清除輸出區 清除繪圖區 Reload 從 1 累加到 100 part2: 1 add to 100 cango_three_gears BSnake AI Tetris Rotating Block Filename: .py Run Output 清除輸出區 清除繪圖區 Reload","tags":"w1 34","url":"./2024-cd-2b-w1 34.html"},{"title":"2024 Spring 課程09","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引. 內容管理系統 使用者可以自行利用 cmsimde_site 倉儲作為 Template, 建立自己的網站內容管理系統. 引用網站網址連結的方法: cmsimde_site - 在文章中多次引用同一個網站連結時, 可以使用此種方法. https://github.com/mdecycu/cmsimde_site - 假如想要快速將網址套用 html 網站連結, 可以使用此種方法. cmsimde_site - 也可以使用 Markdown 的標準網站連結使用格式. # 引用 Python 程式的方法 for i in range(10): print(i, \"列出字串\") 也可以直接在 .md 檔案中使用 html 標註, 或加入 Javascript 或 Brython 程式碼. 從 1 累加到 100: 1 add to 100 將 iterable 與 iterator 相關說明 , 利用 Brython 與 Ace Editor 整理在這個頁面. Filename: .py Run Output 清除輸出區 清除繪圖區 Reload 從 1 累加到 100 part2: 1 add to 100 cango_three_gears BSnake AI Tetris Rotating Block Filename: .py Run Output 清除輸出區 清除繪圖區 Reload","tags":"w1 09","url":"./2024-Spring-w1-blog-tutorial 09.html"},{"title":"協同產品設計實習 2024 Spring 課程","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引. 內容管理系統 使用者可以自行利用 cmsimde_site 倉儲作為 Template, 建立自己的網站內容管理系統. 引用網站網址連結的方法: cmsimde_site - 在文章中多次引用同一個網站連結時, 可以使用此種方法. https://github.com/mdecycu/cmsimde_site - 假如想要快速將網址套用 html 網站連結, 可以使用此種方法. cmsimde_site - 也可以使用 Markdown 的標準網站連結使用格式. # 引用 Python 程式的方法 for i in range(10): print(i, \"列出字串\") 也可以直接在 .md 檔案中使用 html 標註, 或加入 Javascript 或 Brython 程式碼. 從 1 累加到 100: 1 add to 100 將 iterable 與 iterator 相關說明 , 利用 Brython 與 Ace Editor 整理在這個頁面. Filename: .py Run Output 清除輸出區 清除繪圖區 Reload 從 1 累加到 100 part2: 1 add to 100 cango_three_gears BSnake AI Tetris Rotating Block Filename: .py Run Output 清除輸出區 清除繪圖區 Reload","tags":"w1","url":"./2024-Spring-w1-blog-tutorial.html"}]};