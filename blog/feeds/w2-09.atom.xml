<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>midbg4 - w2 09</title><link href="./" rel="alternate"></link><link href="./feeds/w2-09.atom.xml" rel="self"></link><id>./</id><updated>2024-06-17T07:38:32+08:00</updated><entry><title>20240229 w2 09</title><link href="./2024-Spring-w2-blog-tutorial%2009.html" rel="alternate"></link><published>2024-02-29T11:09:00+08:00</published><updated>2024-06-17T07:38:32+08:00</updated><author><name>41123209</name></author><id>tag:None,2024-02-29:./2024-Spring-w2-blog-tutorial 09.html</id><summary type="html">&lt;p&gt;協同產品設計實習的第二週, 主要利用 Github Classroom 進行協同分組, 除了 Replit, 也可以利用 Github Codespaces 維護個人或分組網站內容.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;協同產品設計實習的第二週, 主要利用 Github Classroom 進行協同分組, 除了 Replit, 也可以利用 Github Codespaces 維護個人或分組網站內容.&lt;/p&gt;

&lt;h1&gt;第二周&lt;/h1&gt;
&lt;p&gt;利用 Github Classroom 指定分組倉儲
由於各分組網站從 Github Classroom 執行配置, 因此該倉儲位於 mdecd2024 帳號下, 雖然各組組員具備對此分組倉儲改版的權限, 但是若將分組倉儲 import 到 Replit, 因為其倉儲擁有者為 mdecd2024, 因此無法從 Replit accoount 項下進行授權, 但是可以利用 ssh-keygen 建立 .ssh 目錄下的 id_rsa 與 id_rsa.pub, 之後除了將公鑰送到 Github 之外, 還需要在 .ssh 目錄中建立 config, 且將倉儲 .git/config 中的 https 協定改為 SSH.&lt;/p&gt;
&lt;p&gt;根據上述流程, 可以在 Replit 中以 SSH 模式取得對 Github 帳號下特定倉儲的改版全縣, 只不過 Replit 的免費帳號環境會不定時刪除 /home/runner/.ssh 目錄中的授權資料, 因此若要使用 Replit 維護從 Github Classroom 取得授權的分組倉儲, 必須使用程式方法配置 .ssh 中的 id_rsa 與 config 檔案.&lt;/p&gt;
&lt;p&gt;範例分組倉儲: https://github.com/mdecd2024/test-ag1
利用 Codespaces 維護倉儲與網站
說明如何利用 Github Codespaces 維護網站內容&lt;/p&gt;
&lt;p&gt;由於 Github Codespaces 免費帳號目前每月可以使用 120 core hours, 因此使用者可以選擇在 Github 倉儲中編輯 markdown 目錄中的網誌 .md 文章後, 只在需要利用 pelican 轉檔或啟動編輯 config/content.htm 與轉靜態網頁內容時, 才啟用 Codespaces. 如此可以最佳化使用 Codespaces 的免費 core hours.&lt;/p&gt;
&lt;p&gt;在近端執行動態網站
說明如何利用近端可攜系統維護分組網站&lt;/p&gt;</content><category term="w2 09"></category><category term="網誌編寫 09"></category></entry></feed>